<UserControl x:Class="Hohoema.Views.PrimaryWindowCoreLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:Hohoema.Views"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:windowsTriggers="using:WindowsStateTriggers"
             xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
             xmlns:mybehavior="using:Hohoema.Views.Behaviors"
             xmlns:uwpToolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
             xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
             xmlns:iconPack="using:MahApps.Metro.IconPacks"
             xmlns:myextensions="using:Hohoema.Views.Extensions"
             xmlns:listItemControls="using:Hohoema.Views.Controls"
             xmlns:templateSelector="using:Hohoema.Views.TemplateSelector"
             xmlns:mytrigger="using:Hohoema.Views.StateTrigger"
             xmlns:servicesPlayer="using:Hohoema.Services.Player" 
             xmlns:winui="using:Windows.UI.Xaml.Controls" xmlns:models="using:Hohoema.Models" xmlns:viewModels="using:Hohoema.ViewModels.PrimaryWindowCoreLayout" x:Name="UserControlRoot"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400">
  <UserControl.Resources>
    <x:String x:Key="SideMenuPaneLength">280</x:String>
    <x:String x:Key="SideMenuPaneLength_TVMode">340</x:String>
    <x:String x:Key="DesktopFloatPlayerHeight">160</x:String>
    <x:String x:Key="MobileFloatPlayerHeight">240</x:String>
    <x:Double x:Key="MenuContentToggleAnimationDuration">175</x:Double>
    <Style TargetType="iconPack:PackIconMaterial">
      <Setter Property="RenderTransform">
        <Setter.Value>
          <ScaleTransform ScaleX="1.25" ScaleY="1.25" CenterX="12" CenterY="12" />
        </Setter.Value>
      </Setter>
    </Style>
    <templateSelector:ValueDataTemplateSelector x:Key="PageTypeIconTemplateSelector">
      <templateSelector:ValueDataTemplate Value="RankingCategoryList">
        <DataTemplate>
          <SymbolIcon Symbol="Flag" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="RankingCategory">
        <DataTemplate>
          <SymbolIcon Symbol="Flag" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserMylist">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Mylist">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="FollowManage">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Star" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="WatchHistory">
        <DataTemplate>
          <SymbolIcon Symbol="Clock" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Search">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchSummary">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultCommunity">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultTag">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultKeyword">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultMylist">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultLive">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserInfo">
        <DataTemplate>
          <SymbolIcon Symbol="Account" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserVideo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Community">
        <DataTemplate>
          <SymbolIcon Symbol="People" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="CommunityVideo">
        <DataTemplate>
          <SymbolIcon Symbol="People" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="VideoInfomation">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Information" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="CacheManagement">
        <DataTemplate>
          <SymbolIcon Symbol="Download" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Settings">
        <DataTemplate>
          <SymbolIcon Symbol="Setting" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="NicoRepo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Recommend">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="ThumbUp" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Subscription">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="ClockFast" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Timeshift">
        <DataTemplate>
          <SymbolIcon Symbol="Clock" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="ChannelInfo">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Group" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="ChannelVideo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="WatchAfter">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="PlaylistPlay" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SubscriptionManagement">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Rss" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      
    </templateSelector:ValueDataTemplateSelector>

    <templateSelector:TypeBasedTemplateSelector x:Key="MenuItemTemplateSelector" >
      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.ViewModels.PrimaryWindowCoreLayout.SeparatorMenuItemViewModel, Converter={StaticResource StringToType}}" x:DataType="viewModels:SeparatorMenuItemViewModel">
        <Border />
      </DataTemplate>
      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.ViewModels.PrimaryWindowCoreLayout.MenuItemViewModel, Converter={StaticResource StringToType}}" x:DataType="viewModels:MenuItemViewModel">
        <StackPanel Orientation="Horizontal" Opacity="0.85" Margin="16 0 0 0">
          <ContentControl Content="{Binding PageType}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24" />
          <Border Height="4" Width="16" />
          <TextBlock Text="{Binding Label}" VerticalAlignment="Center" FontSize="15" />
        </StackPanel>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.ViewModels.PrimaryWindowCoreLayout.WatchAfterMenuItemViewModel, Converter={StaticResource StringToType}}" x:DataType="viewModels:WatchAfterMenuItemViewModel">
        <uwpToolkitControls:DockPanel Margin="16 0 0 0" Opacity="0.85">
          <StackPanel  Orientation="Horizontal" uwpToolkitControls:DockPanel.Dock="Left">
            <ContentControl Content="{Binding PageType}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24"  />
            <Border Height="4" Width="16" />
          </StackPanel>
          <Button Command="{Binding PlayWatchAfterPlaylistCommand}" uwpToolkitControls:DockPanel.Dock="Right" Background="Transparent" Padding="0" Width="64">
            <Grid CornerRadius="60" Background="Gray" Height="32" Width="32" Padding="0 0 0 1">
              <TextBlock Text="{Binding WatchAfterPlaylistCount.Value}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Grid>
          </Button>

          <TextBlock Text="{Binding Source=HohoemaPageType.WatchAfter, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" FontSize="15" />
        </uwpToolkitControls:DockPanel>
      </DataTemplate>

    </templateSelector:TypeBasedTemplateSelector>
    
    <DataTemplate x:Key="PinMenuItemTemplate">
      <StackPanel Orientation="Horizontal" Opacity="0.85" Margin="0 0 0 0">
        <ContentControl Content="{Binding PageType,Mode=OneTime}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24" />
        <Border Height="4" Width="16" />
        <!--  OverrideLabelが未設定の場合の表示 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NullToVisibility}}">
          <TextBlock Text="{Binding Label,Mode=OneTime}" VerticalAlignment="Center" FontSize="15" />
          <Border Height="4" Width="8" />
          <TextBlock Style="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Center">
                            (<Run Text="{Binding PageType, Converter={StaticResource LocalizeConverter},Mode=OneTime}" />)</TextBlock>
        </StackPanel>
        <!-- OverrideLabelが設定済みの場合 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NotNullToVisibility}}">
          <TextBlock Text="{Binding OverrideLabel}" VerticalAlignment="Center" FontSize="15" />
        </StackPanel>
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="SingleMenuItemTemplate">
      <ListView IsItemClickEnabled="True"
                SelectionMode="None"
                IsTabStop="False"
                >
        <i:Interaction.Behaviors>
          <core:EventTriggerBehavior EventName="ItemClick">
            <core:InvokeCommandAction Command="{Binding OpenPageCommand}"
                                      InputConverter="{StaticResource ItemClickEventArgsConverter}" />
          </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        <ListView.ItemContainerStyle>
          <Style TargetType="ListViewItem">
            <Setter Property="Padding" Value="0" />
          </Style>
        </ListView.ItemContainerStyle>
        <ListViewItem ContentTemplateSelector="{StaticResource MenuItemTemplateSelector}" Content="{Binding}"></ListViewItem>
      </ListView>
    </DataTemplate>
    <DataTemplate x:Name="VideoSubMenuContentTemplate">
      <StackPanel>
        <ListView ItemsSource="{Binding MenuItems}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              <Setter Property="Padding" Value="16 0 0 0" />
            </Style>
          </ListView.ItemContainerStyle>
        </ListView>
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" />
        <Button Command="{Binding OpenPageCommand}" CommandParameter="UserMylist" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Background="Transparent" Padding="16 0">
          <TextBlock Text="{Binding Source=Mylist, Converter={StaticResource LocalizeConverter}}" uwpToolkitControls:DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource SubtitleTextBlockStyle}" />
        </Button>
        <ListView ItemsSource="{Binding Mylists}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </ListView>
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" Visibility="{Binding LocalMylists, Converter={StaticResource CollectionVisibilityConverter}}" />
        <ListView ItemsSource="{Binding LocalMylists}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </ListView>
      </StackPanel>
    </DataTemplate>
    <Style x:Key="BaseStyle" TargetType="uwpToolkitControls:ImageExBase">
      <Setter Property="IsCacheEnabled" Value="True" />
      <Setter Property="Stretch" Value="UniformToFill" />
      <Setter Property="PlaceholderStretch" Value="UniformToFill" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="White" />
    </Style>
    <!--Create a Style based on BaseStyle-->
    <Style x:Key="RoundStyle" TargetType="uwpToolkitControls:ImageEx" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Width" Value="48" />
      <Setter Property="Height" Value="48" />
      <Setter Property="CornerRadius" Value="999" />
    </Style>
  </UserControl.Resources>
  <Grid x:Name="RootLayout" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <!-- Player -->
    <uwpToolkitControls:DockPanel>
      <Border uwpToolkitControls:DockPanel.Dock="Top"
              x:Name="MobilePlayerTopMargin"
              Height="{Binding ElementName=PlayerFrame, Path=ActualHeight, Mode=OneWay}"
              Visibility="Collapsed" />
      <SplitView x:Name="ContentSplitView"
                 CompactPaneLength="88"
                 DisplayMode="CompactInline"
                 IsPaneOpen="True"
                 IsTabStop="False"
                 PaneBackground="{StaticResource MenuBackgroundBrush}">
        <SplitView.Pane>
          <uwpToolkitControls:DockPanel x:Name="PaneLayout">
            <Border Height="{StaticResource TitleBarDummyHeight}"
                    uwpToolkitControls:DockPanel.Dock="Top" />
            
            <!-- Account and Settings -->
            <uwpToolkitControls:DockPanel uwpToolkitControls:DockPanel.Dock="Top"
                                          HorizontalAlignment="Stretch">
              <Button Command="{Binding OpenPageCommand}"
                      CommandParameter="Settings"
                      uwpToolkitControls:DockPanel.Dock="Right"
                      Background="Transparent"
                      TabIndex="101">
                <SymbolIcon Symbol="Setting" />
              </Button>
              <Grid>
                <Button x:Name="OpenAccountButton"
                        Padding="16 0 0 0"
                        Background="Transparent"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        TabIndex="100">
                  <Button.Flyout>
                    <MenuFlyout>
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenAccountInfo"
                                      Visibility="Collapsed" Text="{Binding Source=LogInUserInfo, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding OpenAccountInfoCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_Logout"
                                      Visibility="Collapsed" Text="{Binding Source=LogOut, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding LogoutFromNiconicoCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_Login"
                                      Visibility="Collapsed" Text="{Binding Source=LogIn, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding NiconicoLoginService.LoginCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenDebugPage"
                                      Visibility="Collapsed" Text="Open Debug Page"
                                      Command="{Binding OpenDebugPageCommand}" />
                    </MenuFlyout>
                  </Button.Flyout>
                  <StackPanel>
                    <TextBlock Text="{Binding NiconicoSession.ServiceStatus, Converter={StaticResource LocalizeConverter}}"
                               x:Name="ServiceStateText" />
                    <uwpToolkitControls:DockPanel Margin="0 0"
                                                  x:Name="AccountInfoLayout"
                                                  Visibility="Collapsed">
                      <Image Source="{Binding NiconicoSession.UserIconUrl,Mode=OneWay}"
                             uwpToolkitControls:DockPanel.Dock="Left"
                             Height="24"
                             Width="24"
                             Margin="0 0 8 0" />
                      <StackPanel>
                        <TextBlock Text="{x:Bind _viewModel.NiconicoSession.UserName,Mode=OneWay}" />
                      </StackPanel>
                    </uwpToolkitControls:DockPanel>
                  </StackPanel>
                </Button>
              </Grid>
            </uwpToolkitControls:DockPanel>
            <!-- Search Box -->
            <Border uwpToolkitControls:DockPanel.Dock="Top">
              <TextBox x:Name="SearchTextBox" Text="{x:Bind SearchInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" UseSystemFocusVisuals="True" TabIndex="103" Margin="8" IsFocusEngagementEnabled="True" >
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="GotFocus">
                    <core:CallMethodAction MethodName="SelectAll" />
                  </core:EventTriggerBehavior>
                  <mybehavior:KeyboardTrigger Key="Enter" x:Name="SearchSubmitWithEnterKeyTrigger" IsEnabled="False">
                    <core:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{x:Bind SearchInputText, Mode=OneWay}" />
                  </mybehavior:KeyboardTrigger>
                </i:Interaction.Behaviors>
              </TextBox>
            </Border>

            <Border x:Name="TV_OpenSearchPageButton" Visibility="Collapsed" uwpToolkitControls:DockPanel.Dock="Top">
              <Button  Background="Transparent" Command="{x:Bind _viewModel.OpenPageCommand}" CommandParameter="Search"
                       HorizontalAlignment="Stretch"
                       HorizontalContentAlignment="Left"
                       Padding="16 8"
                       >
                <StackPanel Orientation="Horizontal" Spacing="8">
                  <SymbolIcon Symbol="Find" />
                  <TextBlock Text="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" />
                </StackPanel>
              </Button>
            </Border>

            <!-- Pins / Video / Live / Mylist -->
            <ScrollViewer HorizontalScrollMode="Disabled"
                          VerticalScrollMode="Auto"
                          VerticalScrollBarVisibility="Hidden">
              <StackPanel x:Name="PaneScrollableContentLayout">
                <StackPanel>
                  <uwpToolkitControls:DockPanel Margin="0">
                    <Button Command="{x:Bind AddPinCurrentPageCommand}"
                            Background="Transparent"
                            Height="24"
                            uwpToolkitControls:DockPanel.Dock="Right"
                            Margin="0 0 8 0">
                      <SymbolIcon Symbol="Add" ToolTipService.ToolTip="{Binding Source=PinCurrentPage, Converter={StaticResource LocalizeConverter}}"
                                  Opacity="0.55" />
                    </Button>
                    <TextBlock Text="{Binding Source=Pin, Converter={StaticResource LocalizeConverter}}"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Margin="16 0 0 0"
                               Opacity="0.55" />
                  </uwpToolkitControls:DockPanel>
                  <ListView ItemsSource="{Binding Pins}"
                            ItemTemplate="{StaticResource PinMenuItemTemplate}"
                            IsItemClickEnabled="True"
                            SelectionMode="None"
                            TabIndex="1"
                            CanReorderItems="True"
                            AllowDrop="True"
                            xmlns:myExtensions="using:Hohoema.Views.Extensions"
                            myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding OpenPageCommand}"
                                                  InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
                      <DataTemplate>
                        <MenuFlyout>
                          <MenuFlyoutItem Text="{Binding Source=PinChangeArias, Converter={StaticResource LocalizeConverter}}"
                                          Command="{Binding PinChangeOverrideLabelCommand}"
                                          CommandParameter="{Binding}" />
                          <MenuFlyoutSeparator />
                          <MenuFlyoutItem Text="{Binding Source=PinRemove, Converter={StaticResource LocalizeConverter}}"
                                          Command="{Binding RemovePinCommand}"
                                          CommandParameter="{Binding}" />
                        </MenuFlyout>
                      </DataTemplate>
                    </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
                  </ListView>
                  <StackPanel Visibility="{Binding Pins, Converter={StaticResource EmptyCollectionVisibilityConverter}}"
                              Margin="0 8">
                    <TextBlock Opacity="0.7"
                               FontSize="12"
                               Margin="24 0 0 0">
                      <Run Text="{Binding Source=PinHowToAddition, Converter={StaticResource LocalizeConverter}}" />
                    </TextBlock>
                  </StackPanel>
                </StackPanel>
                <Pivot >

                  <Pivot.ItemContainerStyle>
                    <Style TargetType="PivotItem">
                      <Setter Property="Margin"
                              Value="0" />
                    </Style>
                  </Pivot.ItemContainerStyle>
                  <PivotItem Header="{Binding Source=NiconicoServiceType.Video, Converter={StaticResource LocalizeConverter}}"
                             Content="{Binding VideoMenu}"
                             ContentTemplate="{StaticResource VideoSubMenuContentTemplate}" />
                  
                </Pivot>
              </StackPanel>
            </ScrollViewer>
          </uwpToolkitControls:DockPanel>
        </SplitView.Pane>
        <SplitView.Content>
          <Grid x:Name="SplitViewContentLayout">
            <!-- ページ毎のコンテンツ -->
            <Grid>
              <uwpToolkitControls:DockPanel>
                <Border x:Name="ContentFrameTopSpace" uwpToolkitControls:DockPanel.Dock="Top" Visibility="Visible" />
                <Frame x:Name="ContentFrame" VerticalContentAlignment="Stretch" DataContext="{x:Null}" Margin="0 0 0 0">
                  <myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                    <templateSelector:HohoemaFlyoutTemplateSelector>
                      <templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
                        <DataTemplate>
                          <local:SearchHistoryListItemFlyout />
                        </DataTemplate>
                      </templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
                    </templateSelector:HohoemaFlyoutTemplateSelector>
                  </myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                </Frame>
              </uwpToolkitControls:DockPanel>
              <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="Mobile_BarrierSearchTextBoxBorder" Visibility="Collapsed" IsHitTestVisible="True" Opacity="0.8" />
            </Grid>
            <Border x:Name="TopMenuDesktopTitleberBackground" Visibility="Visible" uwpToolkitControls:DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}" VerticalAlignment="Top" />
            <uwpToolkitControls:DockPanel >
              <Border x:Name="TopMenuDesktopTitleBarSpace" uwpToolkitControls:DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}" />
              <!-- ページヘッダー -->
              <uwpToolkitControls:DockPanel x:Name="TopMenuLayout" uwpToolkitControls:DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" uwpToolkitControls:DockPanel.Dock="Left" Spacing="4">
                  <!-- モバイル時のメニュー開閉ボタン -->
                  <Button x:Name="MenuToggleButton" Visibility="Collapsed" Width="40" Background="Transparent" Command="{x:Bind TogglePageOpenCommand}">
                    <iconPack:PackIconMaterial Kind="Menu" Width="16" Height="16" Opacity="0.9" />
                  </Button>
                  <Border x:Name="Mobile_BackButtonLayout" Margin="0 0 0 0" Visibility="Collapsed">
                    <Button Width="40" Background="Transparent" VerticalContentAlignment="Center" Command="{x:Bind GoBackCommand}">
                      <SymbolIcon Symbol="Back" Height="16" Width="16" />
                    </Button>
                  </Border>
                </StackPanel>
                <Grid>
                  <TextBlock x:Name="MenuTitleText" Text="{x:Bind PageTitle,Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="16 8 64 8" VerticalAlignment="Center" IsHitTestVisible="False" MaxLines="1" />
                  <StackPanel x:Name="MenuTitleText_WithOptional" Margin="16 0 16 0" Spacing="0" VerticalAlignment="Top" Visibility="Collapsed">
                    <TextBlock x:Name="PageTitleText_WithOptionl" Text="{x:Bind PageTitle,Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="0.7" />
                    <TextBlock x:Name="OptionalPageTitleText" Text="{x:Bind OptionalPageTitle,Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="0 0 64 0" MaxLines="1" />
                  </StackPanel>
                </Grid>
              </uwpToolkitControls:DockPanel>
              <Border />
            </uwpToolkitControls:DockPanel>
            
            <Grid x:Name="Mobile_SearchLayout" Margin="0 32 0 0" VerticalAlignment="Top">
              <Button x:Name="Mobile_ShowSearchButton" Background="Transparent" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Collapsed" Padding="16 0">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:ChangePropertyAction TargetObject="{x:Bind}" PropertyName="NowMobileSearchTextInput" Value="True" />
                    <mybehavior:SetFocus TargetObject="{Binding ElementName=Mobile_SearchTextBox}" Delay="0:0:0.1" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <StackPanel Orientation="Horizontal">
                  <SymbolIcon Symbol="Find" Opacity="0.7" Margin="0 0 8 0" VerticalAlignment="Center">
                    <SymbolIcon.RenderTransform>
                      <ScaleTransform ScaleX="0.8" ScaleY="0.8" CenterX="13" CenterY="13" />
                    </SymbolIcon.RenderTransform>
                  </SymbolIcon>
                  <TextBlock Text="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" Opacity="0.7" VerticalAlignment="Center" FontSize="13" />
                </StackPanel>
              </Button>
              <Border Background="{StaticResource MenuBackgroundBrush}" x:Name="Mobile_BlindSearchTextBoxBorder" IsHitTestVisible="True" Visibility="Collapsed">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Tapped">
                    <core:ChangePropertyAction TargetObject="{x:Bind}" PropertyName="NowMobileSearchTextInput" Value="False" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </Border>
              <TextBox x:Name="Mobile_SearchTextBox" Text="{x:Bind SearchInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" UseSystemFocusVisuals="True" TabIndex="103" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="120 0 32 0">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="GotFocus">
                    <core:CallMethodAction MethodName="SelectAll" />
                  </core:EventTriggerBehavior>
                  <core:EventTriggerBehavior EventName="LostFocus">
                    <core:ChangePropertyAction TargetObject="{x:Bind}" PropertyName="NowMobileSearchTextInput" Value="False" />
                  </core:EventTriggerBehavior>
                  <mybehavior:KeyboardTrigger Key="Enter" x:Name="Mobile_SearchSubmitWithEnterKeyTrigger" IsEnabled="False">
                    <core:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{x:Bind SearchInputText, Mode=OneWay}" />
                    <core:ChangePropertyAction TargetObject="{x:Bind}" PropertyName="NowMobileSearchTextInput" Value="False" />
                  </mybehavior:KeyboardTrigger>
                </i:Interaction.Behaviors>
              </TextBox>
            </Grid>
            <Grid x:Name="MenuBackgroundGrid"
                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                  Opacity="0.5"
                  Visibility="Collapsed"
                  IsTapEnabled="True"
                  IsHitTestVisible="True">
              <UserControl IsTabStop="True" />
            </Grid>
          </Grid>
        </SplitView.Content>
      </SplitView>
    </uwpToolkitControls:DockPanel>
    <Grid x:Name="PlayerLayout"
          Visibility="Collapsed">
      <Frame x:Name="PlayerFrame"
             DataContext="{x:Null}"
             CacheSize="1"
             HorizontalContentAlignment="Stretch"
             VerticalContentAlignment="Stretch">
        <Frame.ContentTransitions>
          <TransitionCollection>
            <NavigationThemeTransition>
              <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                <DrillInNavigationTransitionInfo />
              </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
          </TransitionCollection>
        </Frame.ContentTransitions>
      </Frame>
      <Grid x:Name="FillPlayerLayout"
            Visibility="Collapsed"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"></Grid>
      <Grid x:Name="FloatPlayerLayout"
            Visibility="Collapsed">
        <!--
        <Button Background="Transparent"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch">
          
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="Click">
              <core:CallMethodAction TargetObject="{Binding PrimaryViewPlayerManager}"
                                     MethodName="ShowWithFill" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <Button.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="閉じる"
                              Command="{Binding PrimaryViewPlayerManager.CloseCommand}" />
            </MenuFlyout>
          </Button.ContextFlyout>
          <Border />
        </Button>
        -->
      </Grid>
    </Grid>
    <Grid Height="32" VerticalAlignment="Top">
      <Border x:Name="DraggableContent" IsTapEnabled="True" Background="Transparent">
        <TextBlock x:Name="TitleBarTextBlock" Text="Hohoema" Margin="12 0 0 0" VerticalAlignment="Center" Opacity="0.9" FontSize="13" HorizontalAlignment="Left" ></TextBlock>
      </Border>
      <Border x:Name="BackButtonLayout" Margin="280 0 0 0" Visibility="Visible" >
        <Button MinHeight="{StaticResource TitleBarDummyHeight}"
                Background="Transparent"
                VerticalContentAlignment="Center"
                Command="{x:Bind GoBackCommand}">
          <SymbolIcon Symbol="Back"
                      Height="13"
                      Width="13" />
        </Button>
      </Border>
      <StackPanel x:Name="DebugUIPanel" Orientation="Horizontal" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0 0 140 0" Spacing="8" Opacity="0.8">
        <TextBlock Text="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" FontSize="9" VerticalAlignment="Center" />
        <StackPanel>
          <TextBlock Text="レイアウト"
                     VerticalAlignment="Center"
                     FontSize="9" />
          <winui:ComboBox ItemsSource="{x:Bind IntaractionModeList}" SelectedItem="{Binding AppearanceSettings.OverrideIntractionMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="9" MinHeight="14" Height="20" Padding="3"
                          >
            <winui:ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Converter={StaticResource LocalizeConverter}, FallbackValue={Binding Source=NoSelected, Converter={StaticResource LocalizeConverter}}}" />
              </DataTemplate>
            </winui:ComboBox.ItemTemplate>
          </winui:ComboBox>
        </StackPanel>
      </StackPanel>
    </Grid>
    <VisualStateManager.VisualStateGroups >
      <!-- デバッグ -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsDebug}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DebugUIPanel.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_OpenDebugPage.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- デスクトップ向けのバックボタンを表示する条件 -->
      <VisualStateGroup xmlns:vsmEx="using:Hohoema.Views.Extensions.VIsualStateManager" vsmEx:VisualStateManagerExtensions.DebugCurrentState="True">
        <VisualState x:Name="VS_BackButtonCollapsed">
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="Or">
              <windowsTriggers:NotEqualStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" NotEqualTo="Desktop" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="Fill" />
              <mytrigger:CompactOverlayViewModeTrigger />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="BackButtonLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      
      <!-- プレイヤーとページレイアウトの表示状態 -->
      <VisualStateGroup x:Name="VSG_PlayerAndMenu" xmlns:vsmEx="using:Hohoema.Views.Extensions.VIsualStateManager" vsmEx:VisualStateManagerExtensions.DebugCurrentState="True">
        <!-- プレイヤーを画面全体表示 -->
        <VisualState x:Name="VS_PlayerFill">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="Fill" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="ContentSplitView.Visibility" Value="Collapsed" />
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（TV） -->
        <VisualState x:Name="VS_PlayerWIW_TV">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger EqualTo="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" Value="TV" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="WindowInWindow" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Width" Value="426" />
            <Setter Target="PlayerLayout.Height" Value="240" />
            <Setter Target="PlayerLayout.Margin" Value="0 0 8 0" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Bottom" />
            <Setter Target="PlayerLayout.HorizontalAlignment" Value="Right" />

            <Setter Target="MenuTitleText.Margin" Value="16 5 16 8" />
            <Setter Target="PaneLayout.Margin" Value="48 27 0 27" />
            <Setter Target="TopMenuLayout.Padding" Value="16 0 0 0" />
            <Setter Target="ContentFrame.Margin" Value="0 0 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
            
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="TV_OpenSearchPageButton.Visibility" Value="Visible" />

          </VisualState.Setters>
        </VisualState>

        <!-- プレイヤーを小窓表示（Desktop） -->
        <VisualState x:Name="VS_PlayerWIW_Desktop">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Desktop" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="WindowInWindow" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Width" Value="426" />
            <Setter Target="PlayerLayout.Height" Value="240" />
            <Setter Target="PlayerLayout.Margin" Value="0 0 8 0" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Bottom" />
            <Setter Target="PlayerLayout.HorizontalAlignment" Value="Right" />
            <Setter Target="BackButtonLayout.Margin" Value="280 0 0 0" />

            <Setter Target="ContentFrame.Margin" Value="0 32 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（Tablet） -->
        <VisualState x:Name="VS_PlayerWIW_Tablet">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Tablet" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="WindowInWindow" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="280" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="280" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
            <Setter Target="BackButtonLayout.Margin" Value="0 246 0 0" />
            <Setter Target="Mobile_SearchLayout.Margin" Value="0 0 0 0" />
            <Setter Target="TopMenuDesktopTitleBarSpace.Visibility" Value="Collapsed" />
            
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
            <Setter Target="MenuTitleText.Margin" Value="16 0 16 0" />
            <Setter Target="TopMenuLayout.Background" Value="{StaticResource MenuBackgroundBrush}" />
            <Setter Target="TopMenuLayout.HorizontalAlignment" Value="Stretch" />
            <Setter Target="Mobile_ShowSearchButton.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="Mobile_BackButtonLayout.Visibility" Value="Visible" />
            <Setter Target="ContentFrame.Margin" Value="0 48 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（Mobile） -->
        <VisualState x:Name="VS_PlayerWIW_Mobile">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="WindowInWindow" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="180" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="180" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
            <Setter Target="Mobile_SearchLayout.Margin" Value="0 0 0 0" />
            <Setter Target="BackButtonLayout.Margin" Value="0 188 0 0" />
          
            <Setter Target="TopMenuDesktopTitleBarSpace.Visibility" Value="Collapsed" />
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
            <Setter Target="MenuTitleText.Margin" Value="16 0 16 0" />
            <Setter Target="TopMenuLayout.Background" Value="{StaticResource MenuBackgroundBrush}" />
            <Setter Target="TopMenuLayout.HorizontalAlignment" Value="Stretch" />
            <Setter Target="Mobile_ShowSearchButton.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="Mobile_BackButtonLayout.Visibility" Value="Visible" />
            <Setter Target="ContentFrame.Margin" Value="0 48 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- TV -->
        <VisualState x:Name="VS_TV">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuTitleText.Margin" Value="16 5 16 8" />
            <Setter Target="PaneLayout.Margin" Value="48 27 0 27" />
            <Setter Target="TopMenuLayout.Padding" Value="16 0 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
            
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="TV_OpenSearchPageButton.Visibility" Value="Visible" />

          </VisualState.Setters>
        </VisualState>
        <!-- Desktop -->
        <VisualState x:Name="VS_Desktop">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentFrame.Margin" Value="0 32 0 0" />
            <Setter Target="ContentFrameTopSpace.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- Tablet -->
        <VisualState x:Name="VS_Tablet">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
            <Setter Target="MenuTitleText.Margin" Value="16 0 16 0" />
            <Setter Target="TopMenuLayout.Background" Value="{StaticResource MenuBackgroundBrush}" />
            <Setter Target="TopMenuLayout.HorizontalAlignment" Value="Stretch" />
            <Setter Target="Mobile_ShowSearchButton.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="Mobile_BackButtonLayout.Visibility" Value="Visible" />
            <Setter Target="ContentFrame.Margin" Value="0 48 0 0" />
          </VisualState.Setters>
        </VisualState>
        <!-- Mobile -->
        <VisualState x:Name="VS_Mobile">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
            <Setter Target="MenuTitleText.Margin" Value="16 0 16 0" />
            <Setter Target="TopMenuLayout.Background" Value="{StaticResource MenuBackgroundBrush}" />
            <Setter Target="TopMenuLayout.HorizontalAlignment" Value="Stretch" />
            <Setter Target="Mobile_ShowSearchButton.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
            <Setter Target="Mobile_BackButtonLayout.Visibility" Value="Visible" />
            <Setter Target="ContentFrame.Margin" Value="0 48 0 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- メニューの表示状態 -->
      <VisualStateGroup x:Name="VSG_Pane" 
                        xmlns:vsmEx="using:Hohoema.Views.Extensions.VIsualStateManager"
                        vsmEx:VisualStateManagerExtensions.DebugCurrentState="True"
                        >
        <!-- TV On Focus -->
        <VisualState x:Name="VS_TVAndOnFocus">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <StateTrigger IsActive="{x:Bind _isFocusMenu.Value, Mode=OneWay}" />
              <mytrigger:EqualConditionStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" Condition="TV" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
          </VisualState.Setters>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="PaneLayout" Storyboard.TargetProperty="Opacity" From="0.5" To="1.0" Duration="0:0:0.125" />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <!-- TV -->
        <VisualState x:Name="VS_TopMenu_TV">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
          </VisualState.Setters>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="PaneLayout" Storyboard.TargetProperty="Opacity" From="1.0" To="0.5" Duration="0:0:0.125" />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <!-- Desktop -->
        <VisualState x:Name="VS_TopMenu_Mouse">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="CompactInline" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
            <Setter Target="ContentSplitView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
        <!-- Table -->
        <VisualState x:Name="VS_TopMenu_Tablet">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
            <Setter Target="ContentSplitView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
        <!-- Mobile -->
        <VisualState x:Name="VS_TopMenu_Mobile">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
            <Setter Target="ContentSplitView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TopMenuDesktopTitleberBackground.Height" Value="32" />
            <Setter Target="TopMenuDesktopTitleBarSpace.Height" Value="27" />
            
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TopMenuDesktopTitleberBackground.Height" Value="32" />
            <Setter Target="TopMenuDesktopTitleBarSpace.Height" Value="32" />
            <Setter Target="ContentFrameTopSpace.Height" Value="32" />
          </VisualState.Setters>
        </VisualState>
        <!-- フルスクリーン時はステータスバーが非表示になる -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.WindowService.IsFullScreen.Value, Mode=OneWay}" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
        </VisualState>
        <!-- モバイルかつ横持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
              <windowsTriggers:OrientationStateTrigger Orientation="Landscape" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PaneLayout.Margin" Value="40 0 0 0" />
            <Setter Target="TopMenuLayout.Margin" Value="0 0 0 0" />
          </VisualState.Setters>
        </VisualState>
        <!-- モバイルかつ縦持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="Mobile" />
              <windowsTriggers:OrientationStateTrigger Orientation="Portrait" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PaneLayout.Margin" Value="0 24 0 0" />
            <Setter Target="TopMenuLayout.Margin" Value="0 24 0 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- アプリのサービス状態 -->
      <VisualStateGroup>
        <VisualState x:Name="OfflineState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="Offline" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="ServiceUnavailableState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="ServiceUnavailable" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="WithoutLoggedInState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="WithoutLoggedIn" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="LoggedInState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="LoggedIn" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ServiceStateText.Visibility" Value="Collapsed" />
            <Setter Target="AccountInfoLayout.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_OpenAccountInfo.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_Logout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- ペインの開閉状態 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Condition="{Binding ElementName=ContentSplitView, Path=DisplayMode, Mode=OneWay}" Value="CompactInline" />
            <mytrigger:EqualConditionStateTrigger Condition="{Binding ElementName=ContentSplitView, Path=DisplayMode, Mode=OneWay}" Value="Inline" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding ElementName=ContentSplitView, Path=IsPaneOpen,Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuBackgroundGrid.Visibility" Value="Visible" />
            <Setter Target="SplitViewContentLayout.IsHitTestVisible" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- 検索ボックス -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:FocusTrigger Target="{Binding ElementName=SearchTextBox}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SearchSubmitWithEnterKeyTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- モバイルの検索ボックスをフォーカス -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind NowMobileSearchTextInput, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Mobile_BlindSearchTextBoxBorder.Visibility" Value="Visible" />
            <Setter Target="Mobile_SearchTextBox.Visibility"
                    Value="Visible" />
            <Setter Target="Mobile_BarrierSearchTextBoxBorder.Visibility" Value="Visible" />
            <Setter Target="Mobile_SearchSubmitWithEnterKeyTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind OptionalPageTitle, Mode=OneWay, Converter={StaticResource NotEmptyStringToBoolean}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuTitleText_WithOptional.Visibility"
                    Value="Visible" />
            <Setter Target="MenuTitleText.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
