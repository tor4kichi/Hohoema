<Page
    x:Class="Hohoema.Views.SubscriptionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:mybehavior="using:Hohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:Hohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:Hohoema.Views.Actions"
    xmlns:subscription="using:Hohoema.Models.Subscription"
    xmlns:templateselector="using:Hohoema.Views.TemplateSelector"
    xmlns:mytriggers="using:Hohoema.Views.StateTrigger"
    xmlns:subscriptionControls="using:Hohoema.Views.Pages.Subscription" xmlns:windowsStateTriggers="using:WindowsStateTriggers" DataContext="{x:Null}"
    mc:Ignorable="d"
    >
  <Grid>
    <Grid x:Name="EmptySubscriptionsNoticeLayout" Margin="16" VerticalAlignment="Center" Visibility="Collapsed">
      <TextBlock Text="{Binding Source=SubscriptionsEmptyNotice, Converter={StaticResource LocalizeConverter}}" TextWrapping="Wrap" Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.7" />
    </Grid>
    <toolkit:DockPanel x:Name="RootLayoutDockPanel">
      <Grid toolkit:DockPanel.Dock="Top" x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
        <CommandBar x:Name="CommandBar">
          <CommandBar.PrimaryCommands>
            <AppBarButton Label="{Binding Source=SubscriptionGroup_Create, Converter={StaticResource LocalizeConverter}}" Icon="Add" AllowFocusOnInteraction="True">
              <AppBarButton.Flyout>
                <Flyout x:Name="SubscriptionCraeteFlyout">
                  <StackPanel MinWidth="180" Spacing="8">
                    <TextBox x:Name="SubscriptionGroupNameTextBox"
                             Header="{Binding Source=SubscriptionGroupCreate_Flyout_Title, Converter={StaticResource LocalizeConverter}}"
                             InputScope="Text"
                             MinWidth="80">
                      <i:Interaction.Behaviors>
                        <mybehavior:KeyboardTrigger Key="Enter" OnlyWhenFocus="{x:Bind SubscriptionGroupNameTextBox}" IsEnabled="True">
                          <core:InvokeCommandAction Command="{Binding SubscriptionManager.AddSubscription}" CommandParameter="{Binding ElementName=SubscriptionGroupNameTextBox, Path=Text}" />
                          <core:CallMethodAction TargetObject="{x:Bind SubscriptionCraeteFlyout}" MethodName="Hide" />
                          <core:ChangePropertyAction TargetObject="{x:Bind SubscriptionGroupNameTextBox}" PropertyName="Text" Value="" />
                        </mybehavior:KeyboardTrigger>
                      </i:Interaction.Behaviors>
                    </TextBox>
                    <Button Content="{Binding Source=Add, Converter={StaticResource LocalizeConverter}}" HorizontalAlignment="Stretch">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                          <core:InvokeCommandAction Command="{Binding SubscriptionManager.AddSubscription}" CommandParameter="{Binding ElementName=SubscriptionGroupNameTextBox, Path=Text}" />
                          <core:CallMethodAction TargetObject="{x:Bind SubscriptionCraeteFlyout}" MethodName="Hide" />
                          <core:ChangePropertyAction TargetObject="{x:Bind SubscriptionGroupNameTextBox}" PropertyName="Text" Value="" />                          
                        </core:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                    </Button>
                  </StackPanel>
                </Flyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Label="{Binding Source=Refresh, Converter={StaticResource LocalizeConverter}}" Icon="Refresh" Command="{Binding WatchItLater.Refresh}" />
            <AppBarButton Label="{Binding Source=Settings, Converter={StaticResource LocalizeConverter}}" Icon="Setting">
              <AppBarButton.Flyout>
                <MenuFlyout>
                  <ToggleMenuFlyoutItem Text="{Binding Source=AutoUpdateToggleButtonTitle, Converter={StaticResource LocalizeConverter}}" IsChecked="{Binding WatchItLater.IsAutoUpdateEnabled, Mode=TwoWay}" />
                </MenuFlyout>
              </AppBarButton.Flyout>
            </AppBarButton>
          </CommandBar.PrimaryCommands>
        </CommandBar>
      </Grid>
      <GridView ItemsSource="{Binding SubscriptionManager.Subscriptions, Mode=TwoWay}" CanReorderItems="True" AllowDrop="True" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollMode="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" SingleSelectionFollowsFocus="False" SelectionMode="None" Margin="8 0" x:Name="SubscriptionsGridView">
        <GridView.ItemTemplate>
          <DataTemplate>
            <subscriptionControls:SubscriptionControl />
          </DataTemplate>
        </GridView.ItemTemplate>
        <GridView.ItemContainerStyle>
          <Style TargetType="GridViewItem">
            <Setter Property="IsFocusEngagementEnabled" Value="True" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinWidth" Value="300" />
            <Setter Property="BorderThickness" Value="0 0 1 0" />
            <Setter Property="BorderBrush" Value="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" />
          </Style>
        </GridView.ItemContainerStyle>
        <GridView.ItemsPanel>
          <ItemsPanelTemplate>
            <ItemsStackPanel Orientation="Horizontal" />
          </ItemsPanelTemplate>
        </GridView.ItemsPanel>
      </GridView>
    </toolkit:DockPanel>
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="SubscriptionsGridView.Padding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="SubscriptionsGridView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="SubscriptionsGridView.Padding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="SubscriptionsGridView.Padding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState x:Name="EmptySubscriptions">
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding SubscriptionManager.Subscriptions.Count, Mode=OneWay}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptySubscriptionsNoticeLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
