<UserControl x:Name="SubscriptionControlRoot"
             x:Class="Hohoema.Views.Pages.Subscription.SubscriptionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:Hohoema.Views.Pages.Subscription"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:subscription="using:Hohoema.Models.Subscription"
             xmlns:templateselector="using:Hohoema.Views.TemplateSelector"
             xmlns:mybehavior="using:Hohoema.Views.Behaviors"
             xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
             xmlns:intractionTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInteractionTriggers"
             xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
             xmlns:myTrigger="using:Hohoema.Views.StateTrigger"
             xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
             xmlns:uiExtension="using:WinRTXamlToolkit.Controls.Extensions"
             xmlns:subscriptionCommands="using:Hohoema.Views.Subscriptions"
             xmlns:uwpUiExtension="using:Microsoft.Toolkit.Uwp.UI.Extensions"
             xmlns:flyouts="using:Hohoema.Views.Flyouts"
             xmlns:controls="using:Hohoema.Views.Controls"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400">

  <UserControl.Resources>
    <templateselector:ValueDataTemplateSelector x:Key="SubscriptionSourceTypeListViewItemTemplateSelector"
                                                PropertyName="SourceType">
      <templateselector:ValueDataTemplate Value="User">
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <SymbolIcon Symbol="Account"
                        Margin="0 0 8 0" />
            <TextBlock Text="{Binding Label}" />
          </StackPanel>
        </DataTemplate>
      </templateselector:ValueDataTemplate>
      <templateselector:ValueDataTemplate Value="Channel">
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <SymbolIcon Symbol="People"
                        Margin="0 0 8 0" />
            <TextBlock Text="{Binding Label}" />
          </StackPanel>
        </DataTemplate>
      </templateselector:ValueDataTemplate>
      <templateselector:ValueDataTemplate Value="Mylist">
        <DataTemplate>
          <uwpcontrols:DockPanel>
            <SymbolIcon Symbol="List"
                        Margin="0 1 8 0"
                        uwpcontrols:DockPanel.Dock="Left"
                        VerticalAlignment="Top" />

            <TextBlock uwpcontrols:DockPanel.Dock="Bottom"
                       Text="{Binding OptionalLabel}"
                       Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                       FontSize="12" />

            <TextBlock Text="{Binding Label}" />

          </uwpcontrols:DockPanel>
        </DataTemplate>
      </templateselector:ValueDataTemplate>

      <templateselector:ValueDataTemplate Value="TagSearch">
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <SymbolIcon Symbol="Tag"
                        Margin="0 0 8 0" />
            <TextBlock Text="{Binding Label}" />
          </StackPanel>
        </DataTemplate>
      </templateselector:ValueDataTemplate>
      <templateselector:ValueDataTemplate Value="KeywordSearch">
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <SymbolIcon Symbol="Find"
                        Margin="0 0 8 0" />
            <TextBlock Text="{Binding Label}" />
          </StackPanel>
        </DataTemplate>
      </templateselector:ValueDataTemplate>
    </templateselector:ValueDataTemplateSelector>

  </UserControl.Resources>

  <Grid x:Name="SubscriptionItemLayoutRoot">

    <ListView ItemsSource="{Binding Sources}"
              ItemTemplateSelector="{StaticResource SubscriptionSourceTypeListViewItemTemplateSelector}"
              AllowDrop="True"
              CanReorderItems="True"
              IsItemClickEnabled="True"
              SelectionMode="None"
              xmlns:myExtensions="using:Hohoema.Views.Extensions"
              myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}">
      <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="ItemClick">
          <core:InvokeCommandAction Command="{x:Bind ViewModel.OpenSubscriptionSourceCommand}"
                                    InputConverter="{StaticResource ItemClickEventArgsConverter}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
        <DataTemplate>
          <flyouts:SubscriptionItemFlyout />
        </DataTemplate>
      </myExtensions:ListViewBase.ItemContextFlyoutTemplate>

      <ListView.Header>
        <controls:ScrollHeader Mode="Sticky">
          <Grid>

            <Border x:Name="HiddenVideoTitleRegexFlyoutOwner">
              <FlyoutBase.AttachedFlyout>
                <Flyout x:Name="HiddenVideoTitleRegexFlyout">
                  <StackPanel MinWidth="180">
                    <TextBox Header="{Binding Source=ExcludeKeywordOnVideoTitle, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                             Text="{Binding DoNotNoticeKeyword, Mode=OneWay}"
                             x:Name="HiddenVideoTitleRegexTextBox" />

                    <ToggleSwitch Header="{Binding Source=UseRegularExpression, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                  IsOn="{Binding DoNotNoticeKeywordAsRegex, Mode=TwoWay}">

                    </ToggleSwitch>

                    <Button Content="{Binding Source=Confirm, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                            HorizontalAlignment="Stretch"
                            Height="32">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                          <core:InvokeCommandAction Command="{Binding UpdateDoNotNoticeKeyword}"
                                                    CommandParameter="{Binding ElementName=HiddenVideoTitleRegexTextBox, Path=Text}" />
                          <core:CallMethodAction TargetObject="{Binding ElementName=HiddenVideoTitleRegexFlyout}"
                                                 MethodName="Hide" />
                        </core:EventTriggerBehavior>

                        <mybehavior:KeyboardTrigger Key="Enter"
                                                    OnlyWhenFocus="{Binding ElementName=HiddenVideoTitleRegexTextBox}"
                                                    IsEnabled="True">
                          <core:InvokeCommandAction Command="{Binding UpdateDoNotNoticeKeyword}"
                                                    CommandParameter="{Binding ElementName=HiddenVideoTitleRegexTextBox, Path=Text}" />

                          <core:CallMethodAction TargetObject="{Binding ElementName=HiddenVideoTitleRegexFlyout}"
                                                 MethodName="Hide" />
                        </mybehavior:KeyboardTrigger>
                      </i:Interaction.Behaviors>
                    </Button>

                  </StackPanel>
                </Flyout>
              </FlyoutBase.AttachedFlyout>
            </Border>

            <Border x:Name="UpdatingNoticeLayout"
                    Visibility="Collapsed"
                    VerticalAlignment="Top">
              <ProgressBar x:Name="UpdatingProgressBar"
                           IsIndeterminate="False"
                           Maximum="{Binding UpdateTargetCount}"
                           Value="{Binding UpdateCompletedCount}" />
            </Border>

            <CommandBar>
              <CommandBar.PrimaryCommands>
                <AppBarButton Label="{Binding Source=SubscriptionAdd, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                              Icon="Add"
                              x:Name="AddSubscriptionSourceButton"
                              Command="{x:Bind ViewModel.ChoiceSubscriptionSourceCommand}"
                              CommandParameter="{Binding}" />
                <AppBarButton Label="{Binding Source=Settings, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                              Icon="Setting">
                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                      <mybehavior:OpenFlyout TargetFlyoutOwner="{Binding ElementName=SetttingFlyoutOwner}" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>

                </AppBarButton>
              </CommandBar.PrimaryCommands>

              <CommandBar.Content>
                <Grid Margin="8 0 0 0">
                  <TextBlock Text="{Binding Label, Mode=OneWay}"
                             Style="{StaticResource SubtitleTextBlockStyle}"
                             VerticalAlignment="Center"
                             Margin="0 0 0 4"
                             x:Name="SubscriptionLabelTextBlock"
                             IsDoubleTapEnabled="True">
                                        
                    <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="DoubleTapped">
                      <mybehavior:OpenFlyout TargetFlyoutOwner="{Binding ElementName=SubscriptionLabelTextBlock}" />
                    </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <FlyoutBase.AttachedFlyout>
                      <Flyout x:Name="RenameFlyout">

                        <StackPanel x:Name="RenameFlyoutLayout"
                                    MinWidth="180">
                          <TextBox x:Name="SubscriptionRenameTextBox"
                                   Text="{Binding Label}"
                                   uiExtension:TextBoxFocusExtensions.AutoSelectOnFocus="True" />

                          <Border Height="8" />

                          <Button Content="{Binding Source=Confirm, Converter={StaticResource LocalizeConverter}}"
                                  Command="{Binding Rename}"
                                  CommandParameter="{Binding ElementName=SubscriptionRenameTextBox, Path=Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                  HorizontalAlignment="Stretch"
                                  Height="32">
                            <i:Interaction.Behaviors>
                              <core:EventTriggerBehavior EventName="Click">
                                <core:CallMethodAction TargetObject="{Binding ElementName=RenameFlyout}"
                                                       MethodName="Hide" />
                              </core:EventTriggerBehavior>

                              <mybehavior:KeyboardTrigger Key="Enter"
                                                          OnlyWhenFocus="{Binding ElementName=SubscriptionRenameTextBox}"
                                                          IsEnabled="True">
                                <core:InvokeCommandAction Command="{Binding Rename}"
                                                          CommandParameter="{Binding ElementName=SubscriptionRenameTextBox, Path=Text}" />

                                <core:CallMethodAction TargetObject="{Binding ElementName=RenameFlyout}"
                                                       MethodName="Hide" />
                              </mybehavior:KeyboardTrigger>
                            </i:Interaction.Behaviors>
                          </Button>
                        </StackPanel>
                      </Flyout>
                    </FlyoutBase.AttachedFlyout>        
                  </TextBlock>
                  
                </Grid>

              </CommandBar.Content>
            </CommandBar>

            <Border x:Name="SetttingFlyoutOwner">
              <FlyoutBase.AttachedFlyout>
                <MenuFlyout x:Name="SubscribeSettingFlyout">
                  <ToggleMenuFlyoutItem Text="{Binding Source=AutoRefresh, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                        IsChecked="{Binding IsEnabled, Mode=TwoWay}" />

                  <MenuFlyoutSeparator />

                  <MenuFlyoutItem Text="{Binding Source=Rename, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Click">
                        <mybehavior:OpenFlyout TargetFlyoutOwner="{x:Bind SubscriptionLabelTextBlock}" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                  </MenuFlyoutItem>
                  <MenuFlyoutItem Text="{Binding Source=ExcludeKeywordSettings, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Click">
                        <mybehavior:OpenFlyout TargetFlyoutOwner="{x:Bind HiddenVideoTitleRegexFlyoutOwner}" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                  </MenuFlyoutItem>
                  <MenuFlyoutSubItem Text="{Binding Source=AddToPlaylist, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <MenuFlyoutItem Text="{Binding Source=Edit, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                    Command="{x:Bind ViewModel.MultiSelectSubscriptionDestinationCommand}"
                                    CommandParameter="{Binding}" />

                    <i:Interaction.Behaviors>
                      <mybehavior:MenuFlyoutSubItemItemsSetter ItemsSource="{Binding Destinations, Mode=OneWay}"
                                                               CustomObjectToTag="{x:Bind ViewModel}"
                                                               IsRequireInsertSeparaterBetweenDefaultItems="True">
                        <mybehavior:MenuFlyoutSubItemItemsSetter.ItemTemplate>
                          <DataTemplate>
                            <MenuFlyoutItem Text="{Binding Label}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.OpenSubscriptionDestinationCommand}"
                                            CommandParameter="{Binding}">

                            </MenuFlyoutItem>
                          </DataTemplate>
                        </mybehavior:MenuFlyoutSubItemItemsSetter.ItemTemplate>
                      </mybehavior:MenuFlyoutSubItemItemsSetter>
                    </i:Interaction.Behaviors>

                  </MenuFlyoutSubItem>

                  <MenuFlyoutSeparator />

                  <MenuFlyoutSubItem Text="{Binding Source=SubscriptionGroup_Delete, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <MenuFlyoutItem Text="{Binding Source=Delete, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                    Command="{x:Bind ViewModel.SubscriptionManager.RemoveSubscription}"
                                    CommandParameter="{Binding}" />
                  </MenuFlyoutSubItem>
                </MenuFlyout>
              </FlyoutBase.AttachedFlyout>
            </Border>
          </Grid>

        </controls:ScrollHeader>
      </ListView.Header>

    </ListView>

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <intractionTrigger:InteractionModeTrigger Condition="Touch" />

            <myTrigger:PointerFocusTrigger Target="{Binding ElementName=SubscriptionItemLayoutRoot}" />
            <myTrigger:FocusTrigger Target="{Binding ElementName=SubscriptionItemLayoutRoot}" />
          </VisualState.StateTriggers>
        </VisualState>

        <VisualState>
          <VisualState.Setters>
            <Setter Target="AddSubscriptionSourceButton.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="SubscriptionStatusVisualStateGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Value="{Binding Status}"
                                                  Condition="UpdatePending" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="UpdatingNoticeLayout.Visibility"
                    Value="Visible" />

            <Setter Target="UpdatingProgressBar.IsIndeterminate"
                    Value="True" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Value="{Binding Status}"
                                                  Condition="NowUpdating" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="UpdatingNoticeLayout.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Value="{Binding Status}"
                                                  Condition="Complete" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="UpdatingNoticeLayout.Visibility"
                    Value="Collapsed" />

          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

  </Grid>

</UserControl>
