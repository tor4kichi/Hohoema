<Page x:Class="Hohoema.Views.NicoRepoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Hohoema.Views"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:toolkit="using:WinRTXamlToolkit.Controls"
      xmlns:mvvm="using:Prism.Mvvm"
      xmlns:mybehavior="using:Hohoema.Views.Behaviors"
      xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
      xmlns:controls="using:Hohoema.Views.Controls"
      xmlns:iconPack="using:MahApps.Metro.IconPacks"
      xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
      xmlns:hardtrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
      xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:uwpExtension="using:Microsoft.Toolkit.Uwp.UI.Extensions"
      xmlns:actions="using:Hohoema.Views.Actions"
      xmlns:templateSelector="using:Hohoema.Views.TemplateSelector"
      xmlns:listitem="using:Hohoema.Views.HohoemaListItem"
      xmlns:flyouts="using:Hohoema.Views.Flyouts"
      xmlns:viewModels="using:Hohoema.ViewModels"
      xmlns:videoListPage="using:Hohoema.Views.Pages.VideoListPage" xmlns:windowsStateTriggers="using:WindowsStateTriggers" DataContext="{x:Null}"
      NavigationCacheMode="Enabled"
      mc:Ignorable="d">
  <Page.Resources>
    <templateSelector:TypeBasedTemplateSelector x:Key="NicoRepoItemTemplateSelector">
      <templateSelector:TypeBasedTemplateSelector.DefaultTemplate>
        <DataTemplate x:DataType="viewModels:HohoemaListingPageItemBase">
          <Grid>
            <TextBlock Text="{Binding ItemTopic, Converter={StaticResource LocalizeConverter}}"
                       Opacity="0.7"
                       FontSize="12"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom" />
            <listitem:HohoemaListItemVideo />
          </Grid>
        </DataTemplate>
      </templateSelector:TypeBasedTemplateSelector.DefaultTemplate>
      <!-- Video Item -->
      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.ViewModels.NicoRepoVideoTimeline, Converter={StaticResource StringToType}}"
                    x:DataType="viewModels:NicoRepoVideoTimeline"
                    >
        <Grid>
          <TextBlock Text="{Binding ItempTopicDescription}"
                     Opacity="0.7"
                     FontSize="12"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Bottom" />
          <videoListPage:VideoListItemControl />
        </Grid>
      </DataTemplate>
    </templateSelector:TypeBasedTemplateSelector>
  </Page.Resources>
  <Grid>
    <ListView x:Name="ItemsList"
              ItemsSource="{Binding ItemsView, Mode=OneWay}"
              ItemTemplateSelector="{StaticResource NicoRepoItemTemplateSelector}"
              IsItemClickEnabled="True"
              IncrementalLoadingTrigger="Edge"
              UseSystemFocusVisuals="True"
              SelectionMode="None"
              HorizontalContentAlignment="Stretch"
              ItemContainerStyle="{StaticResource VideoListViewItemStyle}"
              uwpExtensions:ScrollViewerExtensions.VerticalScrollBarMargin="0 48 0 0"
              xmlns:myExtensions="using:Hohoema.Views.Extensions"
              myExtensions:ListViewBase.DeferInitialize="True">

      <myExtensions:ListViewBase.ItemContextFlyoutTemplateSelector>
        <templateSelector:HohoemaFlyoutTemplateSelector>
          <templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
            <DataTemplate>
              <flyouts:VideoItemFlyout />
            </DataTemplate>
          </templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
        </templateSelector:HohoemaFlyoutTemplateSelector>
      </myExtensions:ListViewBase.ItemContextFlyoutTemplateSelector>
      <i:Interaction.Behaviors>
        <mybehavior:ListViewVerticalOffsetGetter VerticalOffset="{Binding ListPosition, Mode=TwoWay}" />
        <core:EventTriggerBehavior EventName="ItemClick">
          <core:InvokeCommandAction Command="{Binding OpenNicoRepoItemCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <ListView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <controls:ScrollHeader x:Name="ScrollHeader" Mode="Sticky">
            <StackPanel>
              <CommandBar x:Name="TopCommandBar">
                <CommandBar.PrimaryCommands>
                  <AppBarButton x:Name="ScrollToTopButton" Label="{Binding Source=ReturnToPageTop, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Icon="Up">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction TargetObject="{x:Bind}" MethodName="ResetScrollPosition" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                  </AppBarButton>
                  <AppBarButton x:Name="RefreshButton" Icon="Refresh" Background="Transparent" Label="{Binding Source=Refresh, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Command="{Binding RefreshCommand}" />
                  <AppBarButton Icon="Setting">
                    <AppBarButton.Flyout>
                      <Flyout x:Name="TopicsEditFlyout" Closed="TopicsEditFlyout_Closed">
                        <ListView ItemsSource="{Binding DisplayCandidateNicoRepoItemTopicList, Mode=OneTime}" SelectionMode="Multiple" IsMultiSelectCheckBoxEnabled="True" ext:ListViewExtensions.BindableSelection="{Binding DisplayNicoRepoItemTopics, Mode=TwoWay}">
                          <ListView.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding Converter={StaticResource LocalizeConverter}}" />
                            </DataTemplate>
                          </ListView.ItemTemplate>
                        </ListView>
                      </Flyout>
                    </AppBarButton.Flyout>
                  </AppBarButton>
                </CommandBar.PrimaryCommands>
              </CommandBar>
            </StackPanel>
          </controls:ScrollHeader>
        </Grid>
      </ListView.Header>
      <ListView.ItemsPanel>
        <ItemsPanelTemplate>
          <ItemsStackPanel x:Name="ItemsPanel"  />
        </ItemsPanelTemplate>
      </ListView.ItemsPanel>
    </ListView>
    <Grid x:Name="NoTimelineItemsLayout"
          Visibility="Collapsed">
      <TextBlock Text="{Binding Source=NicorepoNoItems, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                 Style="{StaticResource SubtitleTextBlockStyle}"
                 Opacity="0.8"
                 VerticalAlignment="Center"
                 HorizontalAlignment="Center" />
    </Grid>
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
     
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasItem.Value, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="NoTimelineItemsLayout.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
