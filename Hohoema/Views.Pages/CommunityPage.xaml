<Page x:Class="Hohoema.Views.CommunityPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Hohoema.Views"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:mvvm="using:Prism.Mvvm"
      xmlns:view="using:Hohoema.Views"
      xmlns:toolkit="using:WinRTXamlToolkit.Controls"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:mybehavior="using:Hohoema.Views.Behaviors"
      xmlns:controls="using:Hohoema.Views.Controls"
      xmlns:iconPack="using:MahApps.Metro.IconPacks"
      xmlns:deviceTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
      xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
      xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
      xmlns:listitem="using:Hohoema.Views.HohoemaListItem"
      xmlns:windowsStateTriggers="using:WindowsStateTriggers"
      DataContext="{x:Null}"
      NavigationCacheMode="Enabled"
      mc:Ignorable="d">
  <Grid>
    <ScrollViewer>
      <StackPanel x:Name="ContentLayout">
        <Border Height="48" />
        <toolkit:DockPanel>
          <Image Width="80" Height="80" Source="{Binding ThumbnailUrl, Mode=OneWay}" Margin="0 0 32 0" toolkit:DockPanel.Dock="Left" />
          <TextBlock Text="{Binding CommunityName}" VerticalAlignment="Center" Style="{StaticResource TitleTextBlockStyle}" toolkit:DockPanel.Dock="Top" />
          <Border Background="Transparent" IsHitTestVisible="True" Margin="0 0 0 0">
            <StackPanel Orientation="Vertical" Margin="0 8">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source=ContentOwner, Converter={StaticResource LocalizeConverter}}" Width="80" />
                <TextBlock Text="{Binding CommunityOwnerName}" />
              </StackPanel>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source=CommunityOpenAt, Converter={StaticResource LocalizeConverter}}" Width="80" />
                <TextBlock Text="{Binding CreatedAt}" />
              </StackPanel>
            </StackPanel>
          </Border>
        </toolkit:DockPanel>
        <!-- 放送の状態表示 -->
        <Border Margin="0 16 0 8" Visibility="{Binding HasCurrentLiveInfo, Converter={StaticResource BooleanToVisibility}}" MaxWidth="960">
          <StackPanel HorizontalAlignment="Stretch">
            <TextBlock Text="{Binding Source=NowLiveStreaming, Converter={StaticResource LocalizeConverter}}" FontSize="18" />
            <ItemsControl ItemsSource="{Binding CurrentLiveInfoList}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0 8">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Border BorderBrush="#f61e1e" BorderThickness="8 0 0 0" Padding="4 0 0 0">
                    <Button Command="{Binding OpenLivePageCommand}" Height="40">
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding LiveTitle}" />
                      </StackPanel>
                    </Button>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
          <!-- 予約された放送もここに表示する？ -->
        </Border>
        <!-- Actions -->
        <Grid Margin="0 24">
        </Grid>
        <Grid>
          <ProgressRing Visibility="{Binding NowLoading, Converter={StaticResource BooleanToVisibility}}" IsActive="{Binding NowLoading}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="16" Width="32" Height="32" />
          <StackPanel Margin="0 0" Visibility="{Binding CommunityVideoSamples, Converter={StaticResource CollectionVisibilityConverter}}">
            <Border Height="16" />
            <HyperlinkButton Command="{Binding OpenCommunityVideoListPageCommand}" Foreground="{ThemeResource ButtonForegroundThemeBrush}" Margin="0 8">
              <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{Binding Source=CommunityVidoes, Converter={StaticResource LocalizeConverter}}" />
            </HyperlinkButton>
            <!-- Ownered Videos -->
            <ScrollViewer VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Disabled" HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Hidden">
              <StackPanel>
                <ListView ItemsSource="{Binding CommunityVideoSamples}"
                          SelectionMode="None"
                          IsItemClickEnabled="True">
                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                      <core:InvokeCommandAction Command="{Binding PlayUserVideoCommand}"
                                                InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                      <ItemsStackPanel Orientation="Horizontal" Margin="0 0 40 0" />
                    </ItemsPanelTemplate>
                  </ListView.ItemsPanel>
                  <ListView.ItemTemplate>
                    <DataTemplate>
                      <listitem:HohoemaListItemMiniCard />
                    </DataTemplate>
                  </ListView.ItemTemplate>
                </ListView>
              </StackPanel>
            </ScrollViewer>
            <Border Height="16" />
          </StackPanel>
        </Grid>
        <!-- コミュニティのプロフィール -->
        <Border Margin="0 4 0 4" Padding="0 4 0 4">
          <TextBlock Text="{Binding Source=Profile, Converter={StaticResource LocalizeConverter}}" FontSize="18" />
        </Border>
        <Border Margin="0 0 0 0">
          <WebView Source="{Binding ProfileHtmlFileUri}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DefaultBackgroundColor="Transparent" xmlns:myExtensions="using:Hohoema.Views.Extensions" myExtensions:WebView.UriNotifyCommand="{Binding ScriptNotifyCommand}">
            <i:Interaction.Behaviors>
              <mybehavior:PreventSpoilerXYNavigationInWebView />
              <mybehavior:WebViewAutoResizeToContent />
            </i:Interaction.Behaviors>
          </WebView>
        </Border>
        <!-- コミュニティのお知らせ -->
        <Border Margin="0 4 0 4" Padding="0 4 0 4" Visibility="{Binding HasNews, Converter={StaticResource BooleanToVisibility}}">
          <TextBlock Text="{Binding Source=Notice, Converter={StaticResource LocalizeConverter}}" FontSize="18" />
        </Border>
        <Border Margin="0 0 0 0" MaxWidth="960">
          <ItemsControl ItemsSource="{Binding NewsList}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <toolkit:DockPanel>
                  <Border toolkit:DockPanel.Dock="Top" Margin="0 8">
                    <TextBlock Text="{Binding Title}" Margin="8 0 0 0" FontWeight="SemiBold" />
                  </Border>
                  <Border toolkit:DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
                    <TextBlock HorizontalAlignment="Right">
                                                    <Run Text="{Binding PostAt}" />
                                                    <Run Text=" | " />
                                                    <Run Text="{Binding AuthorName}" /></TextBlock>
                  </Border>
                  <WebView Source="{Binding ContentHtmlFileUri}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DefaultBackgroundColor="Transparent" Margin="16 8 8 8" xmlns:myExtensions="using:Hohoema.Views.Extensions" myExtensions:WebView.UriNotifyCommand="{Binding ScriptNotifyCommand}">
                    <i:Interaction.Behaviors>
                      <mybehavior:PreventSpoilerXYNavigationInWebView />
                      <mybehavior:WebViewAutoResizeToContent />
                    </i:Interaction.Behaviors>
                  </WebView>
                </toolkit:DockPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </Border>
      </StackPanel>
    </ScrollViewer>
    <Grid x:Name="HeaderLayout" VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="{StaticResource MenuBackgroundBrush}">
      <Border Height="48" />
      <CommandBar HorizontalAlignment="Right">
        <AppBarToggleButton Background="Transparent" IsChecked="{Binding FollowToggleButtonService.IsFollowTarget.Value, Mode=TwoWay}" Command="{Binding FollowToggleButtonService.ToggleFollowCommand}" Icon="Favorite" Label="フォロー" Visibility="Collapsed" x:Name="CommunityFollowButton" />
        <AppBarButton Label="{Binding Source=OpenWithBrowser, Converter={StaticResource LocalizeConverter}}" Command="{Binding OpenCommunityWebPagePageCommand}" VerticalAlignment="Center" UseSystemFocusVisuals="True" />
      </CommandBar>
    </Grid>
    <VisualStateManager.VisualStateGroups>
      <!-- ログインしている場合に有効になるサービスを表示する -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsOwnedCommunity}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NiconicoSession.IsLoggedIn}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CommunityFollowButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
