<Page
    x:Name="PageRoot"
    x:Class="Hohoema.Views.MylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:view="using:Hohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:Hohoema.Views.Behaviors"
    xmlns:controls="using:Hohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:mytrigger="using:Hohoema.Views.StateTrigger"
    xmlns:hardtrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtension="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:Hohoema.Views.Actions"
    xmlns:flyouts="using:Hohoema.Views.Flyouts"
  xmlns:videolistPage="using:Hohoema.Views.Pages.VideoListPage" xmlns:windowsStateTriggers="using:WindowsStateTriggers" DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    >
  <Grid>
    <videolistPage:VideoItemsListView ItemsSource="{Binding MylistItems}" ItemCommand="{Binding PlayWithCurrentPlaylistCommand}" RefreshCommand="{Binding RefreshCommand}" PlaylistPassToFlyout="{Binding Mylist.Value}" x:Name="VideoItemsListView">
      <videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
        <DataTemplate>
          <flyouts:VideoItemFlyout />
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <controls:ScrollHeader x:Name="ScrollHeader" Mode="Sticky">
            <StackPanel >
              <CommandBar x:Name="VideoListCommandBar" Background="Transparent">
                <CommandBar.Content>
                  <StackPanel x:Name="TitleLayout" Margin="16 0 0 0">
                    <StackPanel Orientation="Horizontal" Margin="0 0 0 0" Visibility="{Binding UserName, Converter={StaticResource NotNullToVisibility}}">
                      <TextBlock FontSize="14">
                        <Run Text="{Binding Source=ContentOwner, Converter={StaticResource LocalizeConverter}}" /> : <Run Text="{Binding UserName}" /> </TextBlock>
                      <Border x:Name="DefaultMylistRegistrationCount" Visibility="{Binding IsLoginUserDeflist, Converter={StaticResource BooleanToVisibility}}" Margin="8 0 0 0">
                        <TextBlock>
                        (<Run Text="{Binding Source=MylistRegisteredCount}" />:<Run Text="{Binding DeflistRegistrationCount}" /> <Run Text="{Binding Source=MylistRegisteredCountLimit}" />:<Run Text="{Binding DeflistRegistrationCapacity}" />)</TextBlock>
                      </Border>
                      <Border x:Name="MylistRegistrationCount" Visibility="{Binding IsLoginUserMylistWithoutDeflist, Converter={StaticResource BooleanToVisibility}}" Margin="8 0 0 0">
                        <TextBlock>
                        (<Run Text="{Binding Source=MylistRegisteredCount}" />:<Run Text="{Binding MaxItemsCount}" /> <Run Text="{Binding Source=MylistRegisteredCountSum}" />:<Run Text="{Binding MylistRegistrationCount}" /> 上限:<Run Text="{Binding MylistRegistrationCapacity}" />)</TextBlock>
                      </Border>
                    </StackPanel>
                  </StackPanel>
                </CommandBar.Content>
                <CommandBar.PrimaryCommands>
                  <!-- 非選択中 -->
                  <AppBarToggleButton x:Name="ToggleMylistFavoriteButton" IsChecked="{Binding FollowToggleButtonService.IsFollowTarget.Value, Mode=TwoWay}" Command="{Binding FollowToggleButtonService.ToggleFollowCommand}" Visibility="Collapsed" Icon="Favorite" Label="{Binding Source=Follow, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" />
                  <AppBarButton x:Name="PlayAllButton" Icon="Play" Label="{Binding Source=PlayAll, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Command="{Binding PlayAllVideosFromHeadCommand}"></AppBarButton>
                  <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{Binding Source=ReturnToPageTop, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                  </AppBarButton>
                  <AppBarButton x:Name="RefreshButton" Label="{Binding Source=Refresh, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Icon="Refresh" Command="{Binding RefreshCommand}" IsEnabled="{Binding CanChangeSort.Value}" VerticalAlignment="Center"></AppBarButton>
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                  <AppBarButton x:Name="FeedRegstrationButton" Icon="Add" Visibility="Visible" Label="{Binding Source=SubscriptionAddMylist, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                Command="{Binding AddSubscriptionCommand}"
                                CommandParameter="{Binding Mylist.Value}"
                                >
                  </AppBarButton>
                  <AppBarButton x:Name="OpenUserPageButton" Command="{Binding OpenMylistOwnerCommand}" Background="Transparent" Visibility="Collapsed" Icon="People" Label="{Binding Source=MylistOwner, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"></AppBarButton>
                  <AppBarButton x:Name="EditMylistButton" Command="{Binding EditMylistGroupCommand}" CommandParameter="{Binding PlaylistOrigin.Value}" Background="Transparent" Visibility="Collapsed" Icon="Edit" Label="{Binding Source=MylistEditInfo, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"></AppBarButton>
                  <AppBarSeparator x:Name="MylistDeleteButtonSeparator" Visibility="Collapsed" />
                  <AppBarButton x:Name="DeleteMylistButton" Command="{Binding DeleteMylistCommand}" CommandParameter="{Binding Mylist.Value}" Background="Transparent" Visibility="Collapsed" Icon="Delete" Label="{Binding Source=MylistDelete, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"></AppBarButton>
                </CommandBar.SecondaryCommands>
              </CommandBar>
            </StackPanel>
          </controls:ScrollHeader>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate>
          <Grid>
            <videolistPage:VideoListItemControl />
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>
    </videolistPage:VideoItemsListView>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
     
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLoginUserDeflist}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
            <Setter Target="EditMylistButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsUserOwnerdMylist}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="EditMylistButton.Visibility" Value="Visible" />
            <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
            <Setter Target="MylistDeleteButtonSeparator.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
