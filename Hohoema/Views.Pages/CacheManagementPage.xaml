<Page
    x:Name="PageRoot"
    x:Class="Hohoema.Views.CacheManagementPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:mybehavior="using:Hohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:Hohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:Hohoema.Views.Actions"
    xmlns:myExtensions="using:Hohoema.Views.Extensions"
  xmlns:videolistPage="using:Hohoema.Views.Pages.VideoListPage" xmlns:windowsStateTrigger="using:WindowsStateTriggers" DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    >

  <Grid>

    <videolistPage:VideoItemsListView ItemsSource="{Binding ItemsView}"
                                      ItemCommand="{Binding PlayVideoCommand}"
                                      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}"
                                      RefreshCommand="{Binding RefreshCommand}"
                                      x:Name="VideoItemsListView"
                                      >
      <videolistPage:VideoItemsListView.Header>

        <controls:ScrollHeader x:Name="ScrollHeader"
                               Mode="Sticky"
                               Background="{StaticResource MenuBackgroundBrush}"
                               >
          <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
            <CommandBar >
              <CommandBar.PrimaryCommands>
                <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{Binding Source=ReturnToPageTop, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                      <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </AppBarButton>
              </CommandBar.PrimaryCommands>
              <CommandBar.SecondaryCommands>
                <AppBarButton Label="{Binding CacheSaveFolderPath.Value}" IsEnabled="False" />
                <AppBarButton Label="{Binding Source=OpenCacheFolder, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Command="{Binding OpenCurrentCacheFolderCommand}" />
                <AppBarSeparator />
                <AppBarButton Label="{Binding Source=ChangeCacheFolder, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Command="{Binding ChangeCacheFolderCommand}" />
                <AppBarButton Label="{Binding Source=OpenHohoemaCacheVideoFairUsePolicyText, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Command="{Binding ReadCacheAcceptTextCommand}" />
              </CommandBar.SecondaryCommands>
            </CommandBar>
          </Grid>
        </controls:ScrollHeader>
      </videolistPage:VideoItemsListView.Header>

      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate>
          <Grid>
            <videolistPage:VideoListItemControl />

            <Grid toolkit:DockPanel.Dock="Right" HorizontalAlignment="Right"
                                    >
              <StackPanel>
                <TextBlock Text="{Binding CacheRequestTime}" 
                                               Opacity="0.7"
                                               Margin="0 0 0 4"
                                               FontSize="12"
                                               />
              </StackPanel>

            </Grid>
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>

    </videolistPage:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{Binding Source=CacheVideoNoItems, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>

    
    <Grid x:Name="RequireChangeCacheFolderLayout" Visibility="Collapsed">
      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="8">
        <TextBlock Text="{Binding Source=RequirePickFolderToUsingVieoCacheInHohoema, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" />
        <Button x:Name="UpdateCacheSaveFolderButton" 
                Command="{Binding ChangeCacheFolderCommand}"
                Content="{Binding Source=PickCacheSaveFolder, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                />
      </StackPanel>
    </Grid>

    <Grid x:Name="NotCacheAcceptedLayout">
      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="8">
        <TextBlock Text="{Binding Source=RequireAcceptToUsingVideoCacheInHohoema, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" />

        <Button Content="{Binding Source=OpenHohoemaCacheVideoFairUsePolicyText, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" 
                Command="{Binding RequireEnablingCacheCommand}" 
                Margin="8 16 8 8"
                />
      </StackPanel>
    </Grid>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsRequireUpdateCacheSaveFolder.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="RequireChangeCacheFolderLayout.Visibility" Value="Visible" />
            <Setter Target="NotCacheAcceptedLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsCacheUserAccepted.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoItemsListView.Visibility" Value="Visible" />
            <Setter Target="NotCacheAcceptedLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>


</Page>
