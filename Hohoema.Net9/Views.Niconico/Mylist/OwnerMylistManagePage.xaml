<Page
  x:Class="Hohoema.Views.Pages.Niconico.Mylist.OwnerMylistManagePage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Hohoema.Views.Pages.Niconico.Mylist"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:models="using:Hohoema.Models.Application"
  xmlns:mycontrols="using:Hohoema.Views.Controls"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"  
  mc:Ignorable="d"
  NavigationCacheMode="Enabled"
  >

  <Grid x:Name="ContentLayout">
    <uwpControls:DockPanel>
      <Grid x:Name="HeaderLayout"
            uwpControls:DockPanel.Dock="Top"
            Padding="8 0"
            BorderThickness="0 0 0 1"
            BorderBrush="{StaticResource HohoemaLightBorderBrush}"
            Background="{ThemeResource ApplicationContentBackgroundBrush}">
        <CommandBar DefaultLabelPosition="Right"
                    VerticalContentAlignment="Center">
          <CommandBar.Content>
            <mycontrols:AppTitleBar Title="{Binding Title}" />
          </CommandBar.Content>

          <AppBarButton x:Name="LoginUserMylistActions"
                        Icon="Add"
                        Background="Transparent"
                        Label="{i18nExt:Localize Key=MylistCreate}"
                        Command="{Binding AddMylistGroupCommand}" />

        </CommandBar>
      </Grid>
      <GridView x:Name="ContentItemsView"
                ItemsSource="{Binding ItemsView}"
                IsItemClickEnabled="True"
                SelectionMode="None"
                xmlns:myExtensions="using:Hohoema.Views.Extensions"
                myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}">
        <i:Interaction.Behaviors>
          <i:EventTriggerBehavior EventName="ItemClick">
            <i:InvokeCommandAction Command="{Binding OpenMylistCommand}"
                                   InputConverter="{StaticResource ItemClickEventArgsConverter}" />
          </i:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
          <DataTemplate>
            <MenuFlyout>
              <MenuFlyoutItem Text="{i18nExt:Localize Key=MylistOpenVideoList}"
                              Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.OpenMylistCommand}"
                              CommandParameter="{Binding}" />
              <MenuFlyoutItem Text="{i18nExt:Localize Key=PlayAll}"
                              Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PlaylistPlayAllCommand}"
                              CommandParameter="{Binding}" />
              <MenuFlyoutItem Text="{i18nExt:Localize Key=Edit}"
                              Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.EditMylistGroupCommand}"
                              CommandParameter="{Binding}" />
              <MenuFlyoutItem Text="{i18nExt:Localize Key=Delete}"
                              Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.RemoveMylistGroupCommand}"
                              CommandParameter="{Binding}" />
            </MenuFlyout>
          </DataTemplate>
        </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
        <GridView.ItemsPanel>
          <ItemsPanelTemplate>
            <ItemsWrapGrid x:Name="ItemsPanel"
                           Orientation="Horizontal"
                           ItemWidth="200"
                           Margin="8 0 8 24" />
          </ItemsPanelTemplate>
        </GridView.ItemsPanel>
        <GridView.ItemTemplate>
          <DataTemplate x:DataType="mylistModel:LoginUserMylistPlaylist"
                        xmlns:mylistModel="using:Hohoema.Models.Niconico.Mylist.LoginUser">
            <mylistView:MylistCardView xmlns:mylistView="using:Hohoema.Views.Mylist"
                                       PlaylistName="{x:Bind Name}"
                                       ImageUrl="{x:Bind ThumbnailImage}"
                                       ImageCaption="{x:Bind Count}" />
          </DataTemplate>
        </GridView.ItemTemplate>
      </GridView>
    </uwpControls:DockPanel>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
