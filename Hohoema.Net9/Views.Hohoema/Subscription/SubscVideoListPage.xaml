<Page
  x:Class="Hohoema.Views.Pages.Hohoema.Subscription.SubscVideoListPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Hohoema.Views.Pages.Hohoema.Subscription"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:subscModels="using:Hohoema.Models.Subscriptions"
  xmlns:videoList="using:Hohoema.Views.Controls.VideoList"
  xmlns:controls="using:Hohoema.Views.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers" 
  xmlns:models="using:Hohoema.Models.Application" 
  xmlns:ts="using:Hohoema.Views.TemplateSelector" 
  xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
  xmlns:subscPageVM="using:Hohoema.ViewModels.Pages.Hohoema.Subscription" 
  xmlns:vm="using:Hohoema.ViewModels.VideoListPage" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  mc:Ignorable="d"
  
 >
  <Page.Resources>
    <DataTemplate x:DataType="subscPageVM:SubscVideoListItemViewModel" x:Key="SubscVideoListItemTemplate">
      <Grid>
        <videoList:VideoListItemControl 
                Title="{x:Bind Label}"                 
                ImageSource="{x:Bind ThumbnailUrl}"
                Length="{x:Bind Length, Converter={StaticResource TimeToMovieLengthConverter}}"  
                IsQueueItem="{x:Bind IsQueueItem, Mode=OneWay}"
                IsWatched="{x:Bind IsWatched, Mode=OneWay}"
                IsDeleted="{x:Bind IsDeleted}"
                IsHidden="{x:Bind VideoHiddenInfo, Mode=OneWay, Converter={StaticResource NotNullToBoolean}}"
                CacheStatus="{x:Bind CacheStatus, Mode=OneWay}"
                PostedAt="{x:Bind PostedAt, Converter={StaticResource DateTimeToString}}"
                PrivateReason="{x:Bind PrivateReason, Converter={StaticResource LocalizeConverter}}"
                ViewCount="{x:Bind ViewCount, Converter={StaticResource ToUserFriendlyNumber}}"
                CommentCount="{x:Bind CommentCount, Converter={StaticResource ToUserFriendlyNumber}}"
                MylistCount="{x:Bind MylistCount, Converter={StaticResource ToUserFriendlyNumber}}"
              />
        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
          <TextBlock Opacity="0.7" Style="{StaticResource CaptionTextBlockStyle}" >
                <Run Text="{x:Bind SourceLabel}" /> (<Run Text="{x:Bind SourceType, Converter={StaticResource LocalizeConverter}}" />)
          </TextBlock>
        </StackPanel>
      </Grid>
    </DataTemplate>

    <CollectionViewSource x:Key="SubscVideosItemsViewSource" 
                          ItemsPath="Items"
                          IsSourceGrouped="True"
                          Source="{Binding SubscVideosItems}"
                          />
    
  </Page.Resources>
  

  <Grid>
    <videoList:VideoItemsListView
      ItemsSource="{Binding Source={StaticResource SubscVideosItemsViewSource}}"
      ItemCommand="{Binding VideoPlayWithQueueCommand}"
      ItemTemplate="{StaticResource SubscVideoListItemTemplate}"
      RefreshCommand="{Binding ResetListCommand}"
      x:Name="VideoItemsListView"
     ui:FrameworkElementExtensions.EnableActualSizeBinding="True"          
      >
      <videoList:VideoItemsListView.GroupStyle>
        <GroupStyle HidesIfEmpty="{x:Bind ShowAllSubsc_ToggleButton.IsChecked, Mode=OneWay, Converter={StaticResource BoolNegation}}">
          <GroupStyle.HeaderTemplate>
            <DataTemplate x:DataType="subscPageVM:SubscriptionNewVideosViewModel">
              <uwpControls:DockPanel HorizontalAlignment="Stretch" 
                                     Width="{Binding ElementName=VideoItemsListView, Path=(ui:FrameworkElementExtensions.ActualWidth)}"
                                     >

                <uwpControls:WrapPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" HorizontalSpacing="12">
                  <Button Command="{x:Bind PlayFromHereCommand}" 
                          ToolTipService.ToolTip="{i18nExt:Localize Key=SubscGroup_AllPlayUnwatched}"                          
                          >
                    <SymbolIcon Symbol="Play" />
                  </Button>
                  <Button Command="{x:Bind AddToQueueCommand}" 
                          ToolTipService.ToolTip="{i18nExt:Localize Key=SubscGroup_AddToQueue}">
                    <SymbolIcon Symbol="Add" />
                  </Button>
                  <Button Command="{x:Bind OpenVideoListPageCommand}"
                          ToolTipService.ToolTip="{i18nExt:Localize Key=OpenSubscriptionSourceVideoList}">
                    <SymbolIcon Symbol="List" />
                  </Button>
                  <Button Command="{x:Bind AllMarkAsCheckedCommand}"
                          ToolTipService.ToolTip="{i18nExt:Localize Key=SubscVideos_MarkAsChecked}"                          
                          >
                    <SymbolIcon Symbol="Accept" />
                  </Button>
                </uwpControls:WrapPanel>

                <TextBlock Text="{x:Bind Subscription.Label}" Margin="0 0 8 0" />
              </uwpControls:DockPanel>
              
            </DataTemplate>
          </GroupStyle.HeaderTemplate>
        </GroupStyle>
      </videoList:VideoItemsListView.GroupStyle>
      
      <videoList:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" Padding="8 0" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <CommandBar.Content>
              <StackPanel Orientation="Horizontal">
                <ComboBox ItemsSource="{Binding SubscriptionGroups}"
                          SelectedItem="{Binding SelectedSubscGroup, Mode=TwoWay}"
                          IsEnabled="{Binding NowLoading, Converter={StaticResource BoolNegation}}"
                          VerticalAlignment="Stretch"
                          Height="40"
                          Margin="0 0 8 0"
                          >
                  <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="subscModels:SubscriptionGroup">
                      <TextBlock Text="{Binding Name, FallbackValue={i18nExt:Localize Key=All}}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <controls:AppTitleBar Title="{Binding Title, Mode=OneWay}" />
              </StackPanel>
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>
              <AppBarButton Label="{i18nExt:Localize Key=SubscGroup_AllPlayUnwatched}" Command="{Binding PlaySubscriptionGroupNewVideosCommand}" />
              <AppBarButton Label="{i18nExt:Localize Key=SubscGroup_AddToQueue}" Command="{Binding AddToQueueSubscriptionGroupNewVideosCommand}" />

              <AppBarToggleButton Label="{i18nExt:Localize Key=SubscVideos_ShowAllSubsc}" x:Name="ShowAllSubsc_ToggleButton" />

              <AppBarElementContainer VerticalContentAlignment="Stretch">
                <StackPanel Orientation="Horizontal" Margin="4 0">
                  <Button Content="{i18nExt:Localize Key=SubscVideos_AllMarkAsChecked}" 
                          Padding="8 8"
                          Command="{Binding MarkAsCheckedWithDaysCommand}"
                          >
                    <Button.CommandParameter>
                      <x:Int32>0</x:Int32>
                    </Button.CommandParameter>
                  </Button>
                </StackPanel>
              </AppBarElementContainer>
             
              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}"
                            Margin="4 0"
                            >
                <i:Interaction.Behaviors>
                  <i:EventTriggerBehavior EventName="Click">
                    <i:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </i:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>

              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />

            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
              <AppBarButton x:Name="OpenSubscManagementPageButton" Icon="Setting" Label="{i18nExt:Localize Key=HohoemaPageType.SubscriptionManagement}" Command="{Binding OpenSubscManagementPageCommand}" />

              <AppBarButton x:Name="RefreshButton"
                              Label="{i18nExt:Localize Key=Refresh}" 
                              Icon="Refresh"
                              Command="{Binding ResetListCommand}"
                              VerticalAlignment="Center"
                          >
              </AppBarButton>

            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videoList:VideoItemsListView.Header>
    </videoList:VideoItemsListView>

    <StackPanel x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"
                Spacing="16"
                >
      <TextBlock Text="{Binding AllCheckedLocalizedTextForSelectedGroup, Mode=OneWay}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />

    </StackPanel>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <!--
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
            -->
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ElementName=ShowAllSubsc_ToggleButton, Path=IsChecked}">
              <triggers:IsEqualStateTrigger.To>
                <x:Boolean>True</x:Boolean>
              </triggers:IsEqualStateTrigger.To>
            </triggers:IsEqualStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ShowAllSubsc_ToggleButton.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasNewVideos, Mode=OneWay, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <!--
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
            -->
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
