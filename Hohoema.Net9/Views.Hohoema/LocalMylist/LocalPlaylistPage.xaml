<Page
    x:Class="Hohoema.Views.Pages.Hohoema.LocalMylist.LocalPlaylistPage"
  x:Name="PageRoot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:videolistPage="using:Hohoema.Views.Controls.VideoList"
  xmlns:mytrigger="using:Hohoema.Views.StateTrigger"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:mybehavior="using:Hohoema.Views.Behaviors"
  xmlns:flyouts="using:Hohoema.Views.Flyouts"
  xmlns:controls="using:Hohoema.Views.Controls"
  xmlns:models="using:Hohoema.Models.Application"
  xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  mc:Ignorable="d"
  NavigationCacheMode="Enabled"
  >

  <Grid>

    <videolistPage:VideoItemsListView ItemsSource="{Binding ItemsView, Mode=OneWay}"
                                      ItemCommand="{Binding VideoPlayWithQueueCommand}"
                                      ItemTemplate="{StaticResource VideoListItemControlDefaultTemplate}"
                                      RefreshCommand="{Binding ResetListCommand}"
                                      PlaylistPassToFlyout="{Binding Playlist, Mode=OneWay}"
                                      x:Name="VideoItemsListView"
                                      >

      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <StackPanel>
            <CommandBar x:Name="VideoListCommandBar"
                          DefaultLabelPosition="Right" VerticalContentAlignment="Center"
                          OverflowButtonVisibility="Auto">
              <CommandBar.Content>
                <controls:AppTitleBar Title="{Binding Title, Mode=OneWay}" />
              </CommandBar.Content>
              <CommandBar.PrimaryCommands>
                <!--<AppBarButton x:Name="RemoveWatchedItemsButton"
                                Label="{i18nExt:Localize Key=RemoveWatchedItems}"
                                Command="{Binding RemoveWatchedItemsInAfterWatchPlaylistCommand}"
                                Icon="Delete"
                                Visibility="Collapsed"
                                />-->

                <!-- 非選択中 -->
                <AppBarElementContainer VerticalContentAlignment="Center" IsTabStop="False">
                  <ComboBox ItemsSource="{Binding SortOptionItems, Mode=OneWay}"
                            SelectedItem="{Binding SelectedSortOptionItem, Mode=TwoWay}"
                            >
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                </AppBarElementContainer>
                <AppBarButton x:Name="PlayAllButton"
                                Icon="Play"
                                Label="{i18nExt:Localize Key=PlayAll}"
                                Command="{Binding PlaylistPlayAllCommand}"
                                CommandParameter="{Binding CurrentPlaylistToken.Value, Mode=OneWay}"></AppBarButton>

                <AppBarButton x:Name="ScrollToTopButton"
                                Icon="Up"
                                Label="{i18nExt:Localize Key=ReturnToPageTop}">
                  <i:Interaction.Behaviors>
                    <i:EventTriggerBehavior EventName="Click">
                      <i:CallMethodAction TargetObject="{x:Bind VideoItemsListView}"
                                               MethodName="ResetScrollPosition" />
                    </i:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </AppBarButton>

                <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />
              </CommandBar.PrimaryCommands>
              <CommandBar.SecondaryCommands>

                <AppBarButton x:Name="DeletePlaylistButton"
                                Command="{Binding LocalPlaylistDeleteCommand}"
                                CommandParameter="{Binding Playlist, Mode=OneWay}"
                                Background="Transparent"
                                Icon="Delete"
                                Label="{i18nExt:Localize Key=LocalPlaylistDelete}"></AppBarButton>
              </CommandBar.SecondaryCommands>
            </CommandBar>
          </StackPanel>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
    </videolistPage:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=LocalPlaylistNoItems}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>

    <StackPanel x:Name="PageLoadingErrorLayout" Visibility="Collapsed" Spacing="8" VerticalAlignment="Center" Margin="32">
      <Grid BorderBrush="{ThemeResource SystemErrorTextColor}" MaxWidth="600" BorderThickness="1"  Padding="16">

        <ScrollViewer>
          <StackPanel>
            <TextBlock Text="読み込み中にエラーが発生しました" Style="{StaticResource SubtitleTextBlockStyle}" TextWrapping="Wrap" />
            <TextBlock Text="以下のエラーテキストを開発者に伝えると問題箇所の特定が早まる可能性があります。" TextWrapping="Wrap" />
            <TextBlock Text="{Binding Error, Mode=OneWay}" TextWrapping="Wrap" IsTextSelectionEnabled="True" Margin="8 16 0 0" />
          </StackPanel>
        </ScrollViewer>
      </Grid>
    </StackPanel>
    

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    To="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding"
                    Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    To="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding"
                    Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    To="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding"
                    Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    To="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding"
                    Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasError, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.IsEnabled" Value="False" />
            <Setter Target="PageLoadingErrorLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasItem, Mode=OneWay, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.IsEnabled" Value="False" />
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>
</Page>
