<Page
  x:Name="PageRoot"
  x:Class="Hohoema.Views.Pages.Hohoema.VideoCache.CacheManagementPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Hohoema.Views"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:mybehavior="using:Hohoema.Views.Behaviors"
  xmlns:controls="using:Hohoema.Views.Controls"
  xmlns:videoListControls="using:Hohoema.Views.Controls.VideoList"
  xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI"
  xmlns:actions="using:Hohoema.Views.Actions"
  xmlns:myExtensions="using:Hohoema.Views.Extensions"
  xmlns:models="using:Hohoema.Models.Application"
  xmlns:videolistPage="using:Hohoema.Views.Controls.VideoList" 
  xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:videoList="using:Hohoema.Views.Controls.VideoList.VideoListItem" 
  xmlns:cacheModel="using:Hohoema.Models.VideoCache" 
  xmlns:viewModels="using:Hohoema.ViewModels.Pages.Hohoema.VideoCache"
  mc:Ignorable="d"
    >

  <Page.Resources>
    <CollectionViewSource x:Key="CacheItemsViewSource"
                          Source="{Binding Groups}"
                          IsSourceGrouped="True"
                          ItemsPath="Items"
                          >

    </CollectionViewSource>
  </Page.Resources>
  
  <Grid>

    <videolistPage:VideoItemsListView ItemsSource="{Binding Source={StaticResource CacheItemsViewSource}}"
                                      ItemCommand="{Binding VideoPlayWithQueueCommand}"
                                      RefreshCommand="{Binding ResetListCommand}"
                                      x:Name="VideoItemsListView"
                                      >
      <videolistPage:VideoItemsListView.Header>

        <Grid x:Name="HeaderLayout" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}"
              Height="80"                           
              >
          <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <CommandBar.Content>
              <StackPanel>
                <controls:AppTitleBar Title="{Binding Title, Mode=OneWay}" />
                
                <TextBlock Text="{i18nExt:Localize Key=CacheFeatureIsAvairableForOnlyNiconicoPremiumMember}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="Red"
                           x:Name="CacheFunctionIsForPremiumMemberOnlyText" 
                           Visibility="Collapsed"
                           />
              </StackPanel>
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>

              <AppBarElementContainer VerticalContentAlignment="Center" IsTabStop="False">
                <StackPanel>
                  <StackPanel Orientation="Horizontal" Spacing="16">
                    <TextBlock Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}">
                      <Run Text="{i18nExt:Localize Key=CachedStorageSize_Current}" />:<Run Text="{Binding  CurrentlyCachedStorageSize.Value, Mode=OneWay, Converter={StaticResource ToKMGTPEZY}}" />B
                    </TextBlock>
                    <TextBlock Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" Visibility="{Binding  MaxCacheStorageSize.Value, Mode=OneWay, Converter={StaticResource NotNullToVisibility}}">
                      <Run Text="{i18nExt:Localize Key=CachedStorageSize_Limit}" />:<Run Text="{Binding  MaxCacheStorageSize.Value, Mode=OneWay, Converter={StaticResource ToKMGTPEZY}}" />B
                    </TextBlock>
                    
                  </StackPanel>

                  <ProgressBar Minimum="0.0" Maximum="1.0" Value="{Binding AvairableStorageSizeNormalized.Value, Mode=OneWay}" Visibility="{Binding MaxCacheStorageSize.Value, Mode=OneWay, Converter={StaticResource NotNullToVisibility}}" 
                               Width="200"
                               />
                </StackPanel>
              </AppBarElementContainer>

              <AppBarElementContainer VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsTabStop="False"> 
                <uwpcontrols:DockPanel Margin="8 0" MaxWidth="120">
                  <TextBlock Text="{i18nExt:Localize Key=DownloadOperationRunning}" Visibility="{Binding IsAllowDownload.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}" uwpcontrols:DockPanel.Dock="Left" Margin="0 0 8 0" />
                  <TextBlock Text="{i18nExt:Localize Key=DownloadOperationStopping}" Visibility="{Binding IsAllowDownload.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInverted}}" uwpcontrols:DockPanel.Dock="Left" Margin="0 0 8 0" />

                  <ToggleSwitch IsOn="{Binding IsAllowDownload.Value, Mode=TwoWay}" 
                              Style="{StaticResource ToggleSwitchNoHeader}"
                                MaxWidth="48"
                                Width="48"
                              >
                  </ToggleSwitch>
                </uwpcontrols:DockPanel>
              </AppBarElementContainer>

              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <i:EventTriggerBehavior EventName="Click">
                    <i:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </i:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>

              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
              <AppBarButton Icon="Help">
                <AppBarButton.Flyout>
                  <Flyout>
                    <StackPanel Width="320">
                      <TextBlock TextWrapping="Wrap" LineHeight="18">
                        ・プレミアム会員でログイン中のみダウンロード及びキャッシュからの視聴が可能です <LineBreak />
                        ・OSとアプリが起動中している間のみダウンロードを行います<LineBreak />
                        ・ダウンロードはオンライン視聴していないタイミングで行います<LineBreak />
                        ・キャッシュ済みでもネットワーク非接続状態の場合、キャッシュ動画の視聴は出来ません<LineBreak />
                        ・暗号化動画はキャッシュ出来ません<LineBreak />
                        ・期間限定無料なども現時点で視聴可能であればキャッシュ可能ですが、再生時点で視聴不可なら再生出来ません<LineBreak />
                      </TextBlock>
                    </StackPanel>
                  </Flyout>
                </AppBarButton.Flyout>
              </AppBarButton>


            </CommandBar.SecondaryCommands>
          </CommandBar>

          <HyperlinkButton NavigateUri="https://github.com/tor4kichi/Hohoema/issues/953"                           
                           VerticalAlignment="Bottom"                           
                           VerticalContentAlignment="Bottom"                           
                           >
            <TextBlock Text="動画再生方式 HLS へ移行したため新規キャッシュ取得を停止しています"
                       Style="{StaticResource SubtitleTextBlockStyle}"
                       TextWrapping="Wrap"
                       >
              
            </TextBlock>
          </HyperlinkButton>
        </Grid>
      </videolistPage:VideoItemsListView.Header>

      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate x:DataType="viewModels:CacheVideoViewModel">
          <Grid>
            <videoList:VideoCacheListItem   
              ImageSource="{x:Bind ThumbnailUrl}"
              ImageSubText="{x:Bind Length, Converter={StaticResource TimeToMovieLengthConverter}}"
              IsQueueItem="{x:Bind IsQueueItem, Mode=OneWay}"
              CacheStatus="{x:Bind CacheStatus, Mode=OneWay}"
              >
              <Grid>
                <StackPanel VerticalAlignment="Center" Spacing="4">
                  <TextBlock Text="{x:Bind Label}" FontSize="16"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center" />

                  <StackPanel Orientation="Horizontal" Visibility="{x:Bind HasCacheProgress, Mode=OneWay}" Spacing="8">
                    <TextBlock Width="48" HorizontalTextAlignment="Right">
                      <Run Text="{x:Bind DownloadProgress, Mode=OneWay, Converter={StaticResource ToUserFriendlySoubleVolume}}" />%
                    </TextBlock>
                    <ProgressBar Width="180" Minimum="0.0" Maximum="1.0" Value="{x:Bind DownloadProgress, Mode=OneWay}" IsIndeterminate="{x:Bind IsProgressUnknown, Mode=OneWay}"  />
                  </StackPanel>

                  <StackPanel Orientation="Horizontal" Spacing="8" Opacity="0.7" HorizontalAlignment="Right">

                    <uwpcontrols:SwitchPresenter Value="{x:Bind FailedReason, Mode=OneWay, Converter={StaticResource EnumToNumber}}">
                      <uwpcontrols:CaseCollection >
                        <uwpcontrols:Case >
                          <uwpcontrols:Case.Value>
                            <cacheModel:VideoCacheDownloadOperationFailedReason>None</cacheModel:VideoCacheDownloadOperationFailedReason>
                          </uwpcontrols:Case.Value>
                          <Border />
                        </uwpcontrols:Case>
                        <uwpcontrols:Case IsDefault="True">
                          <TextBlock Text="{x:Bind FailedReason, Mode=OneWay, Converter={StaticResource LocalizeConverter}}"
                           />
                        </uwpcontrols:Case>
                      </uwpcontrols:CaseCollection>
                    </uwpcontrols:SwitchPresenter>


                    <TextBlock Visibility="{x:Bind FileSize, Mode=OneWay, Converter={StaticResource NotNullToVisibility}}" MinWidth="48" HorizontalTextAlignment="Center">
                      <Run Text="{x:Bind FileSize, Mode=OneWay, Converter={StaticResource ToKMGTPEZY}}" />B
                    </TextBlock>

                    <TextBlock Text="{x:Bind CacheRequestedQuality, Mode=OneWay, Converter={StaticResource LocalizeConverter}}"
                           VerticalAlignment="Bottom" 
                               HorizontalTextAlignment="End"
                               MinWidth="80"
                           />


                  </StackPanel>
                  
                </StackPanel>
                

              </Grid>
            </videoList:VideoCacheListItem>
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>


      <videolistPage:VideoItemsListView.GroupStyle>
        <GroupStyle HidesIfEmpty="True">
          <GroupStyle.HeaderTemplate>
            <DataTemplate x:DataType="viewModels:CacheItemsGroup">
              <TextBlock Text="{x:Bind CacheStatus, Mode=OneWay, Converter={StaticResource LocalizeConverter}}" />
            </DataTemplate>
          </GroupStyle.HeaderTemplate>
          
        </GroupStyle>
      </videolistPage:VideoItemsListView.GroupStyle>
      
      
    </videolistPage:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=CacheVideoNoItems}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>


    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" To="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLoggedInWithPremiumMember.Value, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CacheFunctionIsForPremiumMemberOnlyText.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasNoItems}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>


</Page>
