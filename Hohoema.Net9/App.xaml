<Application
    x:Class="Hohoema.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Hohoema"
    xmlns:model="using:Hohoema.Models"
    xmlns:myconv="using:Hohoema.Views.Converters"
    xmlns:templateSelector="using:Hohoema.Views.TemplateSelector"
    xmlns:view="using:Hohoema.Views"
    xmlns:controls="using:Hohoema.Views.Controls"
    xmlns:uwpconv="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:system="using:System"
    xmlns:flyouts="using:Hohoema.Views.Flyouts" 
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:locales="using:Hohoema.Locales" 
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:appModels="using:Hohoema.Models.Application" 
  xmlns:videoList="using:Hohoema.Views.Controls.VideoList" 
   xmlns:listPageVM="using:Hohoema.ViewModels.VideoListPage" 
  xmlns:styles="using:Hohoema.Styles">
  <Application.Resources>

    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Styles/NiconicoStyles.xaml"/>

        <ResourceDictionary Source="Styles/VideoProgressBarStyle.xaml"/>
        <ResourceDictionary Source="Styles/HohoemaListItemStyle.xaml"/>
        <ResourceDictionary Source="Styles/ListViewItemStyles.xaml"/>
        <ResourceDictionary Source="Styles/SettingsControlStyles.xaml"/>
        <ResourceDictionary Source="Styles/FixedHeaderListViewStyle.xaml"/>

        <ResourceDictionary Source="Views/Controls/TransientContainer/TransientContainer.xaml"/>
        <ResourceDictionary Source="Views/Controls/LiteInAppNotification/LiteInAppNotification.xaml"/>
        <ResourceDictionary Source="Views/Controls/VideoList/VideoCacheListItem.xaml"/>
        <ResourceDictionary Source="Views/Controls/VideoList/VideoListItemControl.xaml"/>
        <ResourceDictionary Source="Views/Mylist/MylistCardView.xaml"/>

        <ResourceDictionary Source="Styles/DefaultStyle.xaml"/>

        <styles:VideoListItemControlDefaultTemplate />
        
        <muxc:XamlControlsResources  />
      </ResourceDictionary.MergedDictionaries>

      <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
          <StaticResource x:Key="ApplicationHeaderBackgroundColor" ResourceKey="SystemChromeMediumColor" />
          <SolidColorBrush x:Key="ApplicationHeaderBackgroundBrush" Color="{ThemeResource ApplicationHeaderBackgroundColor}" />
          <StaticResource x:Key="ApplicationContentBackgroundColor" ResourceKey="SystemChromeMediumLowColor" />
          <SolidColorBrush x:Key="ApplicationContentBackgroundBrush" Color="{ThemeResource ApplicationContentBackgroundColor}" />
          <StaticResource x:Key="ApplicationContentBorderBrush" ResourceKey="SystemControlForegroundBaseMediumLowBrush" />

          <LinearGradientBrush x:Key="TvHeaderBackgroundBrush"
                                 StartPoint="0, 0"
                                 EndPoint="0, 1"
                                 >

            <GradientStop Color="{StaticResource SystemAltMediumHighColor}" Offset="0.0" />
            <GradientStop Color="#00FFFFFF" Offset="1.0" />
          </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">

          <StaticResource x:Key="ApplicationHeaderBackgroundColor" ResourceKey="SystemChromeMediumColor" />
          <SolidColorBrush x:Key="ApplicationHeaderBackgroundBrush" Color="{ThemeResource ApplicationHeaderBackgroundColor}" />
          <StaticResource x:Key="ApplicationContentBackgroundColor" ResourceKey="SystemChromeMediumLowColor" />
          <SolidColorBrush x:Key="ApplicationContentBackgroundBrush" Color="{ThemeResource ApplicationContentBackgroundColor}" />
          <StaticResource x:Key="ApplicationContentBorderBrush" ResourceKey="SystemControlForegroundBaseMediumLowBrush" />


          <Color x:Key="SystemBaseHighColor">#CEFFFFFF</Color>
          <Color x:Key="ApplicationPageBackgroundThemeBrush">#FF191919</Color>

          <LinearGradientBrush x:Key="TvHeaderBackgroundBrush"
                                 StartPoint="0, 0"
                                 EndPoint="0, 1"
                                 >

            <GradientStop Color="{StaticResource SystemAltMediumHighColor}" Offset="0.0" />
            <GradientStop Color="#00000000" Offset="1.0" />
          </LinearGradientBrush>

        </ResourceDictionary>
      </ResourceDictionary.ThemeDictionaries>

      <x:Boolean x:Key="DeviceType_IsXbox">False</x:Boolean>
      <x:Boolean x:Key="DeviceType_IsMobile">False</x:Boolean>
      <x:Boolean x:Key="DeviceType_IsDesktop">False</x:Boolean>
      <x:Boolean x:Key="IsDebug_XboxLayout">False</x:Boolean>

      <appModels:UrlToCachedImageConverter x:Key="UrlToCachedImageConverter" />

      <appModels:FeatureFlags x:Key="FeatureFlags" />
      
      <Color x:Key="HohoemaThemeColor" >#F8B400</Color>
      <SolidColorBrush x:Key="HohoemaThemeBackgroundBrush"
                             Color="{StaticResource HohoemaThemeColor}"
                             >
      </SolidColorBrush>
      <SolidColorBrush x:Key="HohoemaPlayerBackgroundBrush"
                    Color="{ThemeResource SystemAltMediumColor}" 
                         />

      <StaticResource x:Key="MenuBackgroundBrush" ResourceKey="ApplicationPageBackgroundThemeBrush" />
      
      <x:Double x:Key="WidthBreakPoint_WideToMiddle">800</x:Double>
      <x:Double x:Key="WidthBreakPoint_MiddleToNallow">520</x:Double>
      <x:Double x:Key="WidthBreakPoint_NallowToVeryNallow">300</x:Double>
      <!-- 27 (safe area) + 48 (Page title) = 75 -->
      <Thickness x:Key="ContentListViewHeaderMargin_TV">16 0 48 0</Thickness>
      <Thickness x:Key="ContentListViewBodyMargin_TV">16 0 48 27</Thickness>
      <Thickness x:Key="ContentPageMargin_TV">16 27 48 27</Thickness>
      <!-- 32 (TitleBar) + 48 (Page title) = 80 -->
      <Thickness x:Key="ContentListViewHeaderMargin_Desktop">8 0 8 0</Thickness>
      <Thickness x:Key="ContentListViewBodyMargin_Desktop">8 0 8 0</Thickness>
      <Thickness x:Key="ContentPageMargin_Desktop">8 0 0 0</Thickness>
      <Thickness x:Key="ContentListViewHeaderMargin_Tablet">8 0 8 0</Thickness>
      <Thickness x:Key="ContentListViewBodyMargin_Tablet">8 0 8 0</Thickness>
      <Thickness x:Key="ContentPageMargin_Tablet">8 0 0 0</Thickness>
      <Thickness x:Key="ContentListViewHeaderMargin_Mobile">8 0 8 0</Thickness>
      <Thickness x:Key="ContentListViewBodyMargin_Mobile">8 0 8 0</Thickness>
      <Thickness x:Key="ContentPageMargin_Mobile">8 0 8 0</Thickness>


      <NavigationThemeTransition x:Key="SuppressNavigationTransition">
        <NavigationThemeTransition.DefaultNavigationTransitionInfo>
          <SuppressNavigationTransitionInfo />
        </NavigationThemeTransition.DefaultNavigationTransitionInfo>
      </NavigationThemeTransition>

      <TransitionCollection x:Key="SuppressNavigationTransitionCollection">
        <NavigationThemeTransition>
          <NavigationThemeTransition.DefaultNavigationTransitionInfo>
            <SuppressNavigationTransitionInfo />
          </NavigationThemeTransition.DefaultNavigationTransitionInfo>
        </NavigationThemeTransition>
      </TransitionCollection>


      <uwpconv:BoolNegationConverter x:Key="BoolNegation" />
      <uwpconv:BoolToVisibilityConverter x:Key="BooleanToVisibility" />
      <uwpconv:BoolToObjectConverter x:Key="BooleanToVisibilityInverted">
        <uwpconv:BoolToObjectConverter.TrueValue>
          <Visibility>Collapsed</Visibility>
        </uwpconv:BoolToObjectConverter.TrueValue>
        <uwpconv:BoolToObjectConverter.FalseValue>
          <Visibility>Visible</Visibility>
        </uwpconv:BoolToObjectConverter.FalseValue>
      </uwpconv:BoolToObjectConverter>
      <myconv:InvertVisibilityConverter x:Key="InvertVisibility" />
      <uwpconv:EmptyStringToObjectConverter x:Key="EmptyStringToBoolean">
        <uwpconv:EmptyStringToObjectConverter.NotEmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyStringToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyStringToObjectConverter.EmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyStringToObjectConverter.EmptyValue>
      </uwpconv:EmptyStringToObjectConverter>
      <uwpconv:EmptyStringToObjectConverter x:Key="NotEmptyStringToBoolean">
        <uwpconv:EmptyStringToObjectConverter.NotEmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyStringToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyStringToObjectConverter.EmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyStringToObjectConverter.EmptyValue>
      </uwpconv:EmptyStringToObjectConverter>
      <uwpconv:EmptyObjectToObjectConverter x:Key="NotNullToBoolean">
        <uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyObjectToObjectConverter.EmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyObjectToObjectConverter.EmptyValue>
      </uwpconv:EmptyObjectToObjectConverter>

      <uwpconv:EmptyObjectToObjectConverter x:Key="NullToBoolean">
        <uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyObjectToObjectConverter.EmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyObjectToObjectConverter.EmptyValue>
      </uwpconv:EmptyObjectToObjectConverter>

      <uwpconv:EmptyObjectToObjectConverter x:Key="NotNullToVisibility">
        <uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
          <Visibility>Visible</Visibility>
        </uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyObjectToObjectConverter.EmptyValue>
          <Visibility>Collapsed</Visibility>
        </uwpconv:EmptyObjectToObjectConverter.EmptyValue>
      </uwpconv:EmptyObjectToObjectConverter>
      <uwpconv:EmptyObjectToObjectConverter x:Key="NullToVisibility">
        <uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
          <Visibility>Collapsed</Visibility>
        </uwpconv:EmptyObjectToObjectConverter.NotEmptyValue>
        <uwpconv:EmptyObjectToObjectConverter.EmptyValue>
          <Visibility>Visible</Visibility>
        </uwpconv:EmptyObjectToObjectConverter.EmptyValue>
      </uwpconv:EmptyObjectToObjectConverter>
      <uwpconv:CollectionVisibilityConverter x:Key="CollectionVisibilityConverter" />
      <uwpconv:EmptyCollectionToObjectConverter x:Key="EmptyCollectionVisibilityConverter">
        <uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
          <Visibility>Visible</Visibility>
        </uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
        <uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
          <Visibility>Collapsed</Visibility>
        </uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
      </uwpconv:EmptyCollectionToObjectConverter>

      <uwpconv:EmptyCollectionToObjectConverter x:Key="NotEmptyCollectionToBooleanConverter">
        <uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
        <uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
      </uwpconv:EmptyCollectionToObjectConverter>

      <uwpconv:EmptyCollectionToObjectConverter x:Key="EmptyCollectionToBooleanConverter">
        <uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
          <x:Boolean>True</x:Boolean>
        </uwpconv:EmptyCollectionToObjectConverter.EmptyValue>
        <uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
          <x:Boolean>False</x:Boolean>
        </uwpconv:EmptyCollectionToObjectConverter.NotEmptyValue>
      </uwpconv:EmptyCollectionToObjectConverter>

      <myconv:TimeSpanToMovieLengthStringValueConverter x:Key="TimeToMovieLengthConverter" />
      <myconv:ColorToBrushConverter x:Key="ColorToBrush" />
      <myconv:SoundVolumeConveter x:Key="ToUserFriendlySoubleVolume" />
      <myconv:VideoPositionToTimeConverter x:Key="VPosToTime" />
      <myconv:ToUserFriendlyNumber x:Key="ToUserFriendlyNumber" />
      <myconv:RelationalDateTimeConverter x:Key="ToRelationalTime" />
      <myconv:TransparentColorConverter x:Key="ToTransparentColor" />
      <myconv:SwipeSeekValueToTimeSpan x:Key="SwipeSeekValueToTimeSpan" />
      <myconv:DateTimeToStringConverter x:Key="DateTimeToString" />
      <myconv:ExpiredDateTimeToStringConverter x:Key="ExpiredDateTimeToString" />
      <myconv:ToKMGTPEZYConverter x:Key="ToKMGTPEZY" />
      <myconv:TiemSpanToLocalizedStringConverter x:Key="TiemSpanToLocalizedString" />

      <uwpconv:StringFormatConverter x:Key="StringFormatConverter" />

      <uwpconv:BoolToObjectConverter x:Name="BoolToAvairableOpacityConverter">
        <uwpconv:BoolToObjectConverter.TrueValue>
          <x:Double>1.0</x:Double>
        </uwpconv:BoolToObjectConverter.TrueValue>
        <uwpconv:BoolToObjectConverter.FalseValue>
          <x:Double>0.7</x:Double>
        </uwpconv:BoolToObjectConverter.FalseValue>
      </uwpconv:BoolToObjectConverter>

      <locales:LocalizeConverter x:Key="LocalizeConverter" />
      <locales:LocalizeWithParameterConverter x:Key="LocalizeWithParameterConverter" />

      <DataTemplate x:Key="LocalizedTextItemTemplate">
        <TextBlock Text="{Binding Converter={StaticResource LocalizeConverter}, FallbackValue={i18nExt:Localize Key=NoSelected}}"/>
      </DataTemplate>
      


      <myconv:CacheStateToColorBrushConverter x:Key="CacheStateToColorBrush" />

      <myconv:TimeSpanToSecondsConverter x:Key="TimeSpanToDoubleConverter" />
      <myconv:ItemClickEventArgsConverter x:Key="ItemClickEventArgsConverter" />

      <myconv:EnumToNumberConverter x:Key="EnumToNumber" />
     
      <DataTemplate x:Key="QualityVideoTemplate">
        <!-- 画質ごとのキャッシュ状態を表示 
                            
                    キャッシュリクエストされていない -> 非表示
                    キャッシュ待機中 -> 灰色
                    キャッシュDL中 -> 青色
                    キャッシュ済み -> 緑色
                            
                    -->
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{Binding Quality, Converter={StaticResource LocalizeConverter}}"
                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"                               
                            Margin="0 0"
                            VerticalAlignment="Center"
                            x:Name="QualityText"
                            >
          </TextBlock>

          <TextBlock Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                               Visibility="{Binding IsCached.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                               >
                        (<Run Text="{Binding CacheState.Value, Converter={StaticResource LocalizeConverter}}" />)
          </TextBlock>
        </StackPanel>
      </DataTemplate>

      <DataTemplate x:Key="QualityVideoTemplate_TV">
        <!-- 画質ごとのキャッシュ状態を表示 
                            
                    キャッシュリクエストされていない -> 非表示
                    キャッシュ待機中 -> 灰色
                    キャッシュDL中 -> 青色
                    キャッシュ済み -> 緑色
                            
                    -->
        <Border>
          <TextBlock 
                           Foreground="{Binding CacheState.Value, Converter={StaticResource CacheStateToColorBrush}}"
                            FontSize="13"
                            Margin="0 0"
                            VerticalAlignment="Center"
                            x:Name="QualityText"
                            >
                    <Run Text="{Binding Quality, Converter={StaticResource LocalizeConverter}}" />
          </TextBlock>
        </Border>
      </DataTemplate>


      <Color x:Key="HohoemaLightBorderColor">#44707070</Color>
      <SolidColorBrush x:Key="HohoemaLightBorderBrush" Color="{StaticResource HohoemaLightBorderColor}" />

      <templateSelector:ListItemContainerStyleSelector 
        x:Key="ListViewItemContainerStyleSelector"        
        VideoStyle="{StaticResource VideoListViewItemStyle}"        
        LiveStyle="{StaticResource LiveListViewItemStyle}"
        >
        
      </templateSelector:ListItemContainerStyleSelector>
      
      <Style TargetType="ListViewItem" x:Key="VideoListViewItemStyle" BasedOn="{StaticResource ListViewItemExpanded}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="92" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="0 8 8 8" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="BorderBrush" Value="{StaticResource HohoemaLightBorderColor}" />
        <Setter Property="ContextFlyout" Value="{StaticResource VideoListItemFlyout}" />
      </Style>

      <Style TargetType="ListViewItem" x:Key="LiveListViewItemStyle" BasedOn="{StaticResource ListViewItemExpanded}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Height" Value="92" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="0 8 0 8" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="BorderBrush" Value="{StaticResource HohoemaLightBorderColor}" />
        <Setter Property="ContextFlyout" Value="{StaticResource LiveListItemFlyout}" />
      </Style>



      <flyouts:LiveListItemFlyout x:Key="LiveListItemFlyout" />
      <DataTemplate x:Key="LiveListItemFlyoutTemplate">
        <flyouts:LiveListItemFlyout />
      </DataTemplate>
      
      <flyouts:VideoItemFlyout x:Key="VideoListItemFlyout" />

      <DataTemplate x:Key="VideoListItemFlyoutTemplate">
        <flyouts:VideoItemFlyout />
      </DataTemplate>

      <Style TargetType="AppBarButton">
        <Setter Property="Margin" Value="2 0" />
        <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}" />
        <Setter Property="CornerRadius" Value="4" />
      </Style>
      <Style TargetType="AppBarToggleButton">
        <Setter Property="Margin" Value="2 0" />
        <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}" />
        <Setter Property="CornerRadius" Value="4" />
      </Style>
      <Style TargetType="AppBarElementContainer">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="2 0" />
      </Style>

      <!-- Note: SplitViewのBorderThicknessがデフォで 0,0,1,0 のため右側に無駄な隙間ができる -->
      <Style TargetType="SplitView">
        <Setter Property="BorderThickness" Value="0" />
      </Style>
      
    </ResourceDictionary>
  </Application.Resources>

</Application>
